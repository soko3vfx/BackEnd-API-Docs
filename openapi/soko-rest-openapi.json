{
    "swagger": "2.0",
    "info": {
        "description": "",
        "title": "standard public schema",
        "version": "1.0.8"
    },
    "host": "https://<instance-id>.supabase.co",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json",
        "application/vnd.pgrst.object+json;nulls=stripped",
        "application/vnd.pgrst.object+json",
        "text/csv"
    ],
    "produces": [
        "application/json",
        "application/vnd.pgrst.object+json;nulls=stripped",
        "application/vnd.pgrst.object+json",
        "text/csv"
    ],
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/openapi+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "OpenAPI description (this document)",
                "tags": [
                    "Introspection"
                ]
            }
        },
        "/types": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.types.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.price"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.biddingId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/types"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "types"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.types"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "types"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.types.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.price"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.biddingId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "types"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.types.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.price"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.types.biddingId"
                    },
                    {
                        "$ref": "#/parameters/body.types"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "types"
                ]
            }
        },
        "/projectDefinitionTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.price"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.price"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTypes.price"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionTypes"
                ]
            }
        },
        "/apiKeys": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.token"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.createdAt"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/apiKeys"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "apiKeys"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.apiKeys"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "apiKeys"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.token"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.createdAt"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "apiKeys"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.token"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.apiKeys.createdAt"
                    },
                    {
                        "$ref": "#/parameters/body.apiKeys"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "apiKeys"
                ]
            }
        },
        "/viewGroups": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/viewGroups"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "viewGroups"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.viewGroups"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "viewGroups"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "viewGroups"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.viewGroups.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/body.viewGroups"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "viewGroups"
                ]
            }
        },
        "/iterations": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.iterations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.number"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.availableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.deadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.softAssigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.assigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.usedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.isIndependent"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/iterations"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "iterations"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.iterations"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "iterations"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.iterations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.number"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.availableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.deadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.softAssigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.assigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.usedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.isIndependent"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "iterations"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.iterations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.number"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.availableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.deadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.softAssigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.assigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.usedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.iterations.isIndependent"
                    },
                    {
                        "$ref": "#/parameters/body.iterations"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "iterations"
                ]
            }
        },
        "/userSharedComponents": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userSharedComponents.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSharedComponents.componentId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userSharedComponents"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userSharedComponents"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userSharedComponents"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userSharedComponents"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userSharedComponents.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSharedComponents.componentId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userSharedComponents"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userSharedComponents.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSharedComponents.componentId"
                    },
                    {
                        "$ref": "#/parameters/body.userSharedComponents"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userSharedComponents"
                ]
            }
        },
        "/integrationApplications": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplications.name"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/integrationApplications"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "integrationApplications"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.integrationApplications"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "integrationApplications"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplications.name"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "integrationApplications"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplications.name"
                    },
                    {
                        "$ref": "#/parameters/body.integrationApplications"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "integrationApplications"
                ]
            }
        },
        "/components": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.components.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.componentStateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.relativePath"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.publisherOs"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isReviewable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isWebComponent"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.webLink"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/components"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "components"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.components"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "components"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.components.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.componentStateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.relativePath"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.publisherOs"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isReviewable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isWebComponent"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.webLink"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "components"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.components.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.componentStateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.relativePath"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.publisherOs"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isReviewable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.isWebComponent"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.components.webLink"
                    },
                    {
                        "$ref": "#/parameters/body.components"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "components"
                ]
            }
        },
        "/outputVersions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.versionNumber"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.comment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isMain"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isClientVersion"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.properties"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputVersions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputVersions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputVersions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputVersions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.versionNumber"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.comment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isMain"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isClientVersion"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.properties"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputVersions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.versionNumber"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.comment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isMain"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isClientVersion"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersions.properties"
                    },
                    {
                        "$ref": "#/parameters/body.outputVersions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputVersions"
                ]
            }
        },
        "/folders": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folders.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.priorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.isHiddenable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.bidPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.usedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codaioPageId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codaioBrowserLink"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.bidHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.availableToStartConflict"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.invoiceNo"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.invoicedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.availableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.importanceNo"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursTotal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.latestDeadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.latestAvailableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.mustStartOn"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.soonestAvailableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.preferredAssignee"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.softAssigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.upstreamHoursCritical"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deadlineConflict"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.spentHoursDiffecence"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.qnote"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastTask"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sprint"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.properties"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursCritical"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursDirect"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastClientNoteDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastNoteDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.fixPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sourceFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sourceFolderTemplateItemId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.billPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.laborCost"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.creationOrder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deletedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.isDeleted"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folders"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folders"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folders"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folders.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.priorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.isHiddenable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.bidPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.usedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codaioPageId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codaioBrowserLink"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.bidHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.availableToStartConflict"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.invoiceNo"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.invoicedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.availableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.importanceNo"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursTotal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.latestDeadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.latestAvailableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.mustStartOn"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.soonestAvailableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.preferredAssignee"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.softAssigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.upstreamHoursCritical"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deadlineConflict"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.spentHoursDiffecence"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.qnote"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastTask"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sprint"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.properties"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursCritical"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursDirect"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastClientNoteDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastNoteDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.fixPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sourceFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sourceFolderTemplateItemId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.billPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.laborCost"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.creationOrder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deletedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.isDeleted"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folders"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folders.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.priorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.isHiddenable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.bidPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.usedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codaioPageId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.codaioBrowserLink"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.bidHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.availableToStartConflict"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.invoiceNo"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.invoicedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.availableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.importanceNo"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursTotal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.latestDeadline"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.latestAvailableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.mustStartOn"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.soonestAvailableToStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.preferredAssignee"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.softAssigneeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.upstreamHoursCritical"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deadlineConflict"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.spentHoursDiffecence"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.qnote"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastTask"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sprint"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.properties"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursCritical"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.downstreamHoursDirect"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastClientNoteDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.lastNoteDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.fixPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sourceFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.sourceFolderTemplateItemId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.billPrice"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.laborCost"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.creationOrder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.deletedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folders.isDeleted"
                    },
                    {
                        "$ref": "#/parameters/body.folders"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folders"
                ]
            }
        },
        "/outgoingStatusMappingIncomingStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingIncomingStatuses.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingIncomingStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outgoingStatusMappingIncomingStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingIncomingStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappingIncomingStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outgoingStatusMappingIncomingStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingIncomingStatuses.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingIncomingStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingIncomingStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingIncomingStatuses.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingIncomingStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappingIncomingStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingIncomingStatuses"
                ]
            }
        },
        "/documentations": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.documentations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.entityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.url"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.entityName"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/documentations"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "documentations"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.documentations"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "documentations"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.documentations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.entityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.url"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.entityName"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "documentations"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.documentations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.entityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.url"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentations.entityName"
                    },
                    {
                        "$ref": "#/parameters/body.documentations"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "documentations"
                ]
            }
        },
        "/jobInstances": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.finishedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.result"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.messageData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.traceback"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/jobInstances"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "jobInstances"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.jobInstances"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "jobInstances"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.finishedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.result"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.messageData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.traceback"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "jobInstances"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.finishedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.result"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.messageData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.jobInstances.traceback"
                    },
                    {
                        "$ref": "#/parameters/body.jobInstances"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "jobInstances"
                ]
            }
        },
        "/notificationTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/notificationTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "notificationTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.notificationTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "notificationTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "notificationTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notificationTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/body.notificationTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "notificationTypes"
                ]
            }
        },
        "/typeOutputTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeOutputTypes.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeOutputTypes.typeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/typeOutputTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "typeOutputTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.typeOutputTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "typeOutputTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeOutputTypes.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeOutputTypes.typeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "typeOutputTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeOutputTypes.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeOutputTypes.typeId"
                    },
                    {
                        "$ref": "#/parameters/body.typeOutputTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "typeOutputTypes"
                ]
            }
        },
        "/payouts": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.payouts.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentReference"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.authorId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/payouts"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "payouts"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.payouts"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "payouts"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.payouts.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentReference"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.authorId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "payouts"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.payouts.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentReference"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.paymentDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payouts.authorId"
                    },
                    {
                        "$ref": "#/parameters/body.payouts"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "payouts"
                ]
            }
        },
        "/schedulerViews": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/schedulerViews"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "schedulerViews"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.schedulerViews"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "schedulerViews"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "schedulerViews"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViews.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/body.schedulerViews"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "schedulerViews"
                ]
            }
        },
        "/chartDatas": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.stateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.hours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.count"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.date"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/chartDatas"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "chartDatas"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.chartDatas"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "chartDatas"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.stateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.hours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.count"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.date"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "chartDatas"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.stateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.hours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.count"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.chartDatas.date"
                    },
                    {
                        "$ref": "#/parameters/body.chartDatas"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "chartDatas"
                ]
            }
        },
        "/statusMappingStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingStatuses.statusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/statusMappingStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "statusMappingStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.statusMappingStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "statusMappingStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingStatuses.statusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statusMappingStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingStatuses.statusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/body.statusMappingStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statusMappingStatuses"
                ]
            }
        },
        "/outputActionTemplates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.outputTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.actionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.statusIds"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.order"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputActionTemplates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputActionTemplates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputActionTemplates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputActionTemplates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.outputTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.actionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.statusIds"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.order"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputActionTemplates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.outputTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.actionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.statusIds"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActionTemplates.order"
                    },
                    {
                        "$ref": "#/parameters/body.outputActionTemplates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputActionTemplates"
                ]
            }
        },
        "/paymentStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.locksEditing"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/paymentStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "paymentStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.paymentStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "paymentStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.locksEditing"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "paymentStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.paymentStatuses.locksEditing"
                    },
                    {
                        "$ref": "#/parameters/body.paymentStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "paymentStatuses"
                ]
            }
        },
        "/statusMappings": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.folderNewStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.outputVersionStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/statusMappings"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "statusMappings"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.statusMappings"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "statusMappings"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.folderNewStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.outputVersionStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statusMappings"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.folderNewStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.outputVersionStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappings.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/body.statusMappings"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statusMappings"
                ]
            }
        },
        "/outputFileTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputFileTypes.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputFileTypes.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputFileTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputFileTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputFileTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputFileTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputFileTypes.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputFileTypes.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputFileTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputFileTypes.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputFileTypes.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.outputFileTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputFileTypes"
                ]
            }
        },
        "/typeApplicationExcludes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeApplicationExcludes.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeApplicationExcludes.applicationId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/typeApplicationExcludes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "typeApplicationExcludes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.typeApplicationExcludes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "typeApplicationExcludes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeApplicationExcludes.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeApplicationExcludes.applicationId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "typeApplicationExcludes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeApplicationExcludes.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeApplicationExcludes.applicationId"
                    },
                    {
                        "$ref": "#/parameters/body.typeApplicationExcludes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "typeApplicationExcludes"
                ]
            }
        },
        "/folderTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTaskable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTypeable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTodoable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isHiddenable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTaskable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTypeable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTodoable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isHiddenable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTaskable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTypeable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isTodoable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.isHiddenable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/body.folderTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTypes"
                ]
            }
        },
        "/projectDefinitionOutputTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputTypes.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionOutputTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionOutputTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionOutputTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionOutputTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputTypes.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionOutputTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputTypes.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionOutputTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionOutputTypes"
                ]
            }
        },
        "/serverInfo": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/serverInfo"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "serverInfo"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.serverInfo"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "serverInfo"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "serverInfo"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.serverInfo.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/body.serverInfo"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "serverInfo"
                ]
            }
        },
        "/cloudLinks": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.cloudApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.originalId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/cloudLinks"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "cloudLinks"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.cloudLinks"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "cloudLinks"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.cloudApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.originalId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "cloudLinks"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.cloudApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudLinks.originalId"
                    },
                    {
                        "$ref": "#/parameters/body.cloudLinks"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "cloudLinks"
                ]
            }
        },
        "/projectStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.color"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.color"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectStatuses.color"
                    },
                    {
                        "$ref": "#/parameters/body.projectStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectStatuses"
                ]
            }
        },
        "/help": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.help.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.help.helpStructure"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/help"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "help"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.help"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "help"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.help.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.help.helpStructure"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "help"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.help.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.help.helpStructure"
                    },
                    {
                        "$ref": "#/parameters/body.help"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "help"
                ]
            }
        },
        "/clients": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.clients.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.clients.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.clients.description"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/clients"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.clients"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.clients.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.clients.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.clients.description"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "clients"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.clients.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.clients.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.clients.description"
                    },
                    {
                        "$ref": "#/parameters/body.clients"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "clients"
                ]
            }
        },
        "/folder_paths": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folder_paths.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folder_paths.folderPath"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folder_paths.folderPathIds"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folder_paths"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folder_paths"
                ]
            }
        },
        "/outputTemplates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.suffix"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.hiddenInOutgoing"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.isExternal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.tagId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.name"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputTemplates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputTemplates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputTemplates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputTemplates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.suffix"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.hiddenInOutgoing"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.isExternal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.tagId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.name"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputTemplates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.suffix"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.hiddenInOutgoing"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.isExternal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.tagId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTemplates.name"
                    },
                    {
                        "$ref": "#/parameters/body.outputTemplates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputTemplates"
                ]
            }
        },
        "/cloudApplications": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.icon"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/cloudApplications"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "cloudApplications"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.cloudApplications"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "cloudApplications"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.icon"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "cloudApplications"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudApplications.icon"
                    },
                    {
                        "$ref": "#/parameters/body.cloudApplications"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "cloudApplications"
                ]
            }
        },
        "/fileTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.fileExtension"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.isOpenable"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/fileTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "fileTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.fileTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "fileTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.fileExtension"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.isOpenable"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "fileTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.fileExtension"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.fileTypes.isOpenable"
                    },
                    {
                        "$ref": "#/parameters/body.fileTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "fileTypes"
                ]
            }
        },
        "/applicationFileTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.applicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/applicationFileTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "applicationFileTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.applicationFileTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "applicationFileTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.applicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "applicationFileTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.applicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.fileTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationFileTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/body.applicationFileTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "applicationFileTypes"
                ]
            }
        },
        "/settings": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.settings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.key"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.isSecret"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/settings"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "settings"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.settings"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "settings"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.settings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.key"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.isSecret"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "settings"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.settings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.key"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.settings.isSecret"
                    },
                    {
                        "$ref": "#/parameters/body.settings"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "settings"
                ]
            }
        },
        "/folderAssigneeTemplates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderAssigneeTemplates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderAssigneeTemplates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderAssigneeTemplates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderAssigneeTemplates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderAssigneeTemplates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssigneeTemplates.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/body.folderAssigneeTemplates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderAssigneeTemplates"
                ]
            }
        },
        "/outputs": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputs.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.suffix"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.hiddenInOutgoing"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.isExternal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.tagId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.fileTypeLogicalOperator"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputs"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputs"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputs"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputs.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.suffix"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.hiddenInOutgoing"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.isExternal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.tagId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.fileTypeLogicalOperator"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputs"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputs.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.outputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.suffix"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.hiddenInOutgoing"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.isExternal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.tagId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputs.fileTypeLogicalOperator"
                    },
                    {
                        "$ref": "#/parameters/body.outputs"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputs"
                ]
            }
        },
        "/__EFMigrationsHistory": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.__EFMigrationsHistory.migrationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.__EFMigrationsHistory.productVersion"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/__EFMigrationsHistory"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "__EFMigrationsHistory"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.__EFMigrationsHistory"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "__EFMigrationsHistory"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.__EFMigrationsHistory.migrationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.__EFMigrationsHistory.productVersion"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "__EFMigrationsHistory"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.__EFMigrationsHistory.migrationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.__EFMigrationsHistory.productVersion"
                    },
                    {
                        "$ref": "#/parameters/body.__EFMigrationsHistory"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "__EFMigrationsHistory"
                ]
            }
        },
        "/documentationOverrides": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.entityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.url"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.entityName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/documentationOverrides"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "documentationOverrides"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.documentationOverrides"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "documentationOverrides"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.entityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.url"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.entityName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "documentationOverrides"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.entityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.url"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.entityName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.documentationOverrides.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/body.documentationOverrides"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "documentationOverrides"
                ]
            }
        },
        "/projectViews": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.googleSheetURL"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForManagerView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForProjectView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForVersionView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectViews"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectViews"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectViews"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectViews"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.googleSheetURL"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForManagerView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForProjectView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForVersionView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectViews"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.googleSheetURL"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForManagerView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForProjectView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.isForVersionView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectViews.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/body.projectViews"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectViews"
                ]
            }
        },
        "/noteAssignees": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.noteId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/noteAssignees"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "noteAssignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.noteAssignees"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "noteAssignees"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.noteId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "noteAssignees"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.noteId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/body.noteAssignees"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "noteAssignees"
                ]
            }
        },
        "/folderTemplates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateCodeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.priorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.biddingOverrideId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateDescription"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.creationOrder"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderTemplates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderTemplates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderTemplates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderTemplates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateCodeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.priorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.biddingOverrideId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateDescription"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.creationOrder"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTemplates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateCodeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.plannedHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.priorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.biddingOverrideId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.folderTemplateDescription"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplates.creationOrder"
                    },
                    {
                        "$ref": "#/parameters/body.folderTemplates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTemplates"
                ]
            }
        },
        "/projectDefinitionActivityTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionActivityTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionActivityTypes.activityTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionActivityTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionActivityTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionActivityTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionActivityTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionActivityTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionActivityTypes.activityTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionActivityTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionActivityTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionActivityTypes.activityTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionActivityTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionActivityTypes"
                ]
            }
        },
        "/assigneeRoleNotificationTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.state"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.defaultEnabled"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.defaultEmailEnabled"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/assigneeRoleNotificationTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "assigneeRoleNotificationTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.assigneeRoleNotificationTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "assigneeRoleNotificationTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.state"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.defaultEnabled"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.defaultEmailEnabled"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "assigneeRoleNotificationTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.state"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.defaultEnabled"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoleNotificationTypes.defaultEmailEnabled"
                    },
                    {
                        "$ref": "#/parameters/body.assigneeRoleNotificationTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "assigneeRoleNotificationTypes"
                ]
            }
        },
        "/applicationVersions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.applicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.arguments"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.environment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.executables"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.versionLabel"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/applicationVersions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "applicationVersions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.applicationVersions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "applicationVersions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.applicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.arguments"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.environment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.executables"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.versionLabel"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "applicationVersions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.applicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.arguments"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.environment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.executables"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applicationVersions.versionLabel"
                    },
                    {
                        "$ref": "#/parameters/body.applicationVersions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "applicationVersions"
                ]
            }
        },
        "/biddingOverrides": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.biddingOverrides.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.biddingOverrides.data"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/biddingOverrides"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "biddingOverrides"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.biddingOverrides"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "biddingOverrides"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.biddingOverrides.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.biddingOverrides.data"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "biddingOverrides"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.biddingOverrides.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.biddingOverrides.data"
                    },
                    {
                        "$ref": "#/parameters/body.biddingOverrides"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "biddingOverrides"
                ]
            }
        },
        "/projectAssignees": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectAssignees"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectAssignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectAssignees"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectAssignees"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectAssignees"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectAssignees.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/body.projectAssignees"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectAssignees"
                ]
            }
        },
        "/customAttributeDefinitions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.customAttributeBaseTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.customAttributeGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isInheritable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isPinned"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isHidden"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.defaultValue"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.values"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.codeName"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/customAttributeDefinitions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.customAttributeDefinitions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "customAttributeDefinitions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.customAttributeBaseTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.customAttributeGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isInheritable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isPinned"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isHidden"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.defaultValue"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.values"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.codeName"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.customAttributeBaseTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.customAttributeGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isInheritable"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isPinned"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.isHidden"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.defaultValue"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.values"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitions.codeName"
                    },
                    {
                        "$ref": "#/parameters/body.customAttributeDefinitions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitions"
                ]
            }
        },
        "/views": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.views.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForProjectView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForVersionView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForManagerView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/views"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "views"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.views"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "views"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.views.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForProjectView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForVersionView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForManagerView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "views"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.views.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.ownerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isPublic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.tableState"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForProjectView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForVersionView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.isForManagerView"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.filter"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.viewGroupId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.views.pivotMode"
                    },
                    {
                        "$ref": "#/parameters/body.views"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "views"
                ]
            }
        },
        "/folderAssignees": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderAssignees"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderAssignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderAssignees"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderAssignees"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderAssignees"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderAssignees.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/body.folderAssignees"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderAssignees"
                ]
            }
        },
        "/outgoingStatusMappingTags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingTags.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outgoingStatusMappingTags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingTags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappingTags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outgoingStatusMappingTags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingTags.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingTags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingTags.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappingTags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingTags"
                ]
            }
        },
        "/noteCategories": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/noteCategories"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "noteCategories"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.noteCategories"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "noteCategories"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "noteCategories"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteCategories.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/body.noteCategories"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "noteCategories"
                ]
            }
        },
        "/projectDefinitionFolderTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionFolderTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionFolderTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionFolderTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionFolderTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionFolderTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderTypes.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionFolderTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionFolderTypes"
                ]
            }
        },
        "/uploadRecords": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.jobId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.fileName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.path"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.traceback"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.progress"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.total"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.retries"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/uploadRecords"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "uploadRecords"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.uploadRecords"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "uploadRecords"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.jobId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.fileName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.path"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.traceback"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.progress"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.total"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.retries"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "uploadRecords"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.jobId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.fileName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.path"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.traceback"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.progress"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.total"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.uploadRecords.retries"
                    },
                    {
                        "$ref": "#/parameters/body.uploadRecords"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "uploadRecords"
                ]
            }
        },
        "/customAttributeDefinitionPermissions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.canRead"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.canWrite"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/customAttributeDefinitionPermissions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitionPermissions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.customAttributeDefinitionPermissions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "customAttributeDefinitionPermissions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.canRead"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.canWrite"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitionPermissions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.canRead"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionPermissions.canWrite"
                    },
                    {
                        "$ref": "#/parameters/body.customAttributeDefinitionPermissions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitionPermissions"
                ]
            }
        },
        "/actions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.actions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.runLocal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.isAutomatic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.group"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.label"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.outputTemplateId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/actions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "actions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.actions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "actions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.actions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.runLocal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.isAutomatic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.group"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.label"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.outputTemplateId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "actions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.actions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.runLocal"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.isAutomatic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.group"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.label"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.version"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.actions.outputTemplateId"
                    },
                    {
                        "$ref": "#/parameters/body.actions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "actions"
                ]
            }
        },
        "/states": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.states.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/states"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "states"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.states"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "states"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.states.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "states"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.states.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.states.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/body.states"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "states"
                ]
            }
        },
        "/folderFolders": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderFolders.inputFolderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderFolders.outputFolderId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderFolders"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderFolders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderFolders"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderFolders"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderFolders.inputFolderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderFolders.outputFolderId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderFolders"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderFolders.inputFolderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderFolders.outputFolderId"
                    },
                    {
                        "$ref": "#/parameters/body.folderFolders"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderFolders"
                ]
            }
        },
        "/folderTemplateFolderTemplates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplateFolderTemplates.inputFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplateFolderTemplates.outputFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderTemplateFolderTemplates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderTemplateFolderTemplates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderTemplateFolderTemplates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderTemplateFolderTemplates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplateFolderTemplates.inputFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplateFolderTemplates.outputFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTemplateFolderTemplates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplateFolderTemplates.inputFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTemplateFolderTemplates.outputFolderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/body.folderTemplateFolderTemplates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTemplateFolderTemplates"
                ]
            }
        },
        "/permissions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.permissions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.scope"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/permissions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "permissions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.permissions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "permissions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.permissions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.scope"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "permissions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.permissions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.permissions.scope"
                    },
                    {
                        "$ref": "#/parameters/body.permissions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "permissions"
                ]
            }
        },
        "/hourlyRates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.value"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/hourlyRates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "hourlyRates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.hourlyRates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "hourlyRates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.value"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "hourlyRates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.hourlyRates.value"
                    },
                    {
                        "$ref": "#/parameters/body.hourlyRates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "hourlyRates"
                ]
            }
        },
        "/folderTags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTags.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/folderTags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "folderTags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.folderTags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "folderTags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTags.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.folderTags.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.folderTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/body.folderTags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "folderTags"
                ]
            }
        },
        "/storageRecords": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.storageLocation"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.statusMessage"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.progress"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.linkExpiration"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/storageRecords"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "storageRecords"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.storageRecords"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "storageRecords"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.storageLocation"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.statusMessage"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.progress"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.linkExpiration"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "storageRecords"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.storageLocation"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.statusMessage"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.progress"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.linkExpiration"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.storageRecords.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/body.storageRecords"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "storageRecords"
                ]
            }
        },
        "/ayonProductTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ayonProductTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "ayonProductTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.ayonProductTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "ayonProductTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "ayonProductTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.ayonProductTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/body.ayonProductTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "ayonProductTypes"
                ]
            }
        },
        "/frameIOLabels": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.statusId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/frameIOLabels"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "frameIOLabels"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.frameIOLabels"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "frameIOLabels"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.statusId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "frameIOLabels"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.frameIOLabels.statusId"
                    },
                    {
                        "$ref": "#/parameters/body.frameIOLabels"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "frameIOLabels"
                ]
            }
        },
        "/todoTemplates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.text"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.doneDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/todoTemplates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "todoTemplates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.todoTemplates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "todoTemplates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.text"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.doneDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "todoTemplates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.text"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.doneDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todoTemplates.folderTemplateId"
                    },
                    {
                        "$ref": "#/parameters/body.todoTemplates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "todoTemplates"
                ]
            }
        },
        "/projects": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projects.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.projectStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.clientId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.deletedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.isDeleted"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projects"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projects"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projects"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projects"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projects.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.projectStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.clientId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.deletedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.isDeleted"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projects"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projects.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.projectStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.clientId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.startDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.endDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.deletedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projects.isDeleted"
                    },
                    {
                        "$ref": "#/parameters/body.projects"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projects"
                ]
            }
        },
        "/cloudPlaces": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.cloudApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.componentStateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.componentId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/cloudPlaces"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "cloudPlaces"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.cloudPlaces"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "cloudPlaces"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.cloudApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.componentStateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.componentId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "cloudPlaces"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.cloudApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.componentStateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.cloudPlaces.componentId"
                    },
                    {
                        "$ref": "#/parameters/body.cloudPlaces"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "cloudPlaces"
                ]
            }
        },
        "/userAvailabilities": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.weekDayId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.workTimeStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.workTimeEnd"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userAvailabilities"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userAvailabilities"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userAvailabilities"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userAvailabilities"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.weekDayId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.workTimeStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.workTimeEnd"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userAvailabilities"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.weekDayId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.workTimeStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAvailabilities.workTimeEnd"
                    },
                    {
                        "$ref": "#/parameters/body.userAvailabilities"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userAvailabilities"
                ]
            }
        },
        "/holidays": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.holidays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayStartDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayEndDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayType"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/holidays"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "holidays"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.holidays"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "holidays"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.holidays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayStartDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayEndDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayType"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "holidays"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.holidays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayStartDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayEndDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.holidays.holidayType"
                    },
                    {
                        "$ref": "#/parameters/body.holidays"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "holidays"
                ]
            }
        },
        "/customAttributeDefinitionFolderTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/customAttributeDefinitionFolderTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitionFolderTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.customAttributeDefinitionFolderTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "customAttributeDefinitionFolderTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitionFolderTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeDefinitionFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.customAttributeDefinitionFolderTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeDefinitionFolderTypes"
                ]
            }
        },
        "/defaultViews": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.viewId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/defaultViews"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "defaultViews"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.defaultViews"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "defaultViews"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.viewId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "defaultViews"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.defaultViews.viewId"
                    },
                    {
                        "$ref": "#/parameters/body.defaultViews"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "defaultViews"
                ]
            }
        },
        "/biddings": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.biddings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.biddings.data"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/biddings"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "biddings"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.biddings"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "biddings"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.biddings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.biddings.data"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "biddings"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.biddings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.biddings.data"
                    },
                    {
                        "$ref": "#/parameters/body.biddings"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "biddings"
                ]
            }
        },
        "/statusMappingTags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingTags.statusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/statusMappingTags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "statusMappingTags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.statusMappingTags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "statusMappingTags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingTags.statusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statusMappingTags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingTags.statusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statusMappingTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/body.statusMappingTags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statusMappingTags"
                ]
            }
        },
        "/userTimeTrackers": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.startTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.endTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.isLive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.iterationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.userHourlyRate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userTimeTrackers"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userTimeTrackers"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userTimeTrackers"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userTimeTrackers"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.startTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.endTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.isLive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.iterationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.userHourlyRate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userTimeTrackers"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.startTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.endTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.isLive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.iterationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTimeTrackers.userHourlyRate"
                    },
                    {
                        "$ref": "#/parameters/body.userTimeTrackers"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userTimeTrackers"
                ]
            }
        },
        "/projectDefinitionNoteCategories": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionNoteCategories.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionNoteCategories.noteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionNoteCategories"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionNoteCategories"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionNoteCategories"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionNoteCategories"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionNoteCategories.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionNoteCategories.noteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionNoteCategories"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionNoteCategories.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionNoteCategories.noteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionNoteCategories"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionNoteCategories"
                ]
            }
        },
        "/projectDefinitions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.hasBasicFolderStructure"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.directoryStructureSettings"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.templates"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultActivityTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultFolderStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultFolderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultNoteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultOutputStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultOutputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultPriorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.roots"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.isDefault"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.outputNameSettings"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.templateNameProfiles"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.taskLinkPatterns"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultTypePrice"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.hasBasicFolderStructure"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.directoryStructureSettings"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.templates"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultActivityTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultFolderStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultFolderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultNoteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultOutputStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultOutputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultPriorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.roots"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.isDefault"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.outputNameSettings"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.templateNameProfiles"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.taskLinkPatterns"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultTypePrice"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.hasBasicFolderStructure"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.directoryStructureSettings"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.templates"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultActivityTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultFolderStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultFolderTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultNoteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultOutputStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultOutputTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultPriorityId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.roots"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.isDefault"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.outputNameSettings"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.templateNameProfiles"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.taskLinkPatterns"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitions.defaultTypePrice"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitions"
                ]
            }
        },
        "/outputVersionTags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputVersionTags.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersionTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputVersionTags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputVersionTags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputVersionTags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputVersionTags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputVersionTags.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersionTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputVersionTags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputVersionTags.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputVersionTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/body.outputVersionTags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputVersionTags"
                ]
            }
        },
        "/userSkills": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.skillLevel"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userSkills"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userSkills"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userSkills"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userSkills"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.skillLevel"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userSkills"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.typeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userSkills.skillLevel"
                    },
                    {
                        "$ref": "#/parameters/body.userSkills"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userSkills"
                ]
            }
        },
        "/customAttributes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.inheritedValue"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.computedValue"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/customAttributes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "customAttributes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.customAttributes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "customAttributes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.inheritedValue"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.computedValue"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.inheritedValue"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributes.computedValue"
                    },
                    {
                        "$ref": "#/parameters/body.customAttributes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributes"
                ]
            }
        },
        "/publicHolidays": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.date"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/publicHolidays"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "publicHolidays"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.publicHolidays"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "publicHolidays"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.date"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "publicHolidays"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.publicHolidays.date"
                    },
                    {
                        "$ref": "#/parameters/body.publicHolidays"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "publicHolidays"
                ]
            }
        },
        "/userTags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userTags.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.folderId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userTags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userTags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userTags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userTags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userTags.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.folderId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userTags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userTags.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userTags.folderId"
                    },
                    {
                        "$ref": "#/parameters/body.userTags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userTags"
                ]
            }
        },
        "/outputActions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.actionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.statusIds"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.order"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputActions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputActions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputActions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputActions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.actionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.statusIds"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.order"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputActions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.outputId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.actionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.statusIds"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputActions.order"
                    },
                    {
                        "$ref": "#/parameters/body.outputActions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputActions"
                ]
            }
        },
        "/noteAttachments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteAttachments.noteId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAttachments.attachmentId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/noteAttachments"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "noteAttachments"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.noteAttachments"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "noteAttachments"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteAttachments.noteId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAttachments.attachmentId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "noteAttachments"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.noteAttachments.noteId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.noteAttachments.attachmentId"
                    },
                    {
                        "$ref": "#/parameters/body.noteAttachments"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "noteAttachments"
                ]
            }
        },
        "/payoutAttachments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.payoutAttachments.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payoutAttachments.attachmentId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/payoutAttachments"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "payoutAttachments"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.payoutAttachments"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "payoutAttachments"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.payoutAttachments.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payoutAttachments.attachmentId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "payoutAttachments"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.payoutAttachments.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.payoutAttachments.attachmentId"
                    },
                    {
                        "$ref": "#/parameters/body.payoutAttachments"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "payoutAttachments"
                ]
            }
        },
        "/outgoingStatusMappingCurrentStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingCurrentStatuses.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingCurrentStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outgoingStatusMappingCurrentStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingCurrentStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappingCurrentStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outgoingStatusMappingCurrentStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingCurrentStatuses.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingCurrentStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingCurrentStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingCurrentStatuses.outgoingStatusMappingId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappingCurrentStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappingCurrentStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappingCurrentStatuses"
                ]
            }
        },
        "/customAttributeGroups": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/customAttributeGroups"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "customAttributeGroups"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.customAttributeGroups"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "customAttributeGroups"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeGroups"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeGroups.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/body.customAttributeGroups"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeGroups"
                ]
            }
        },
        "/projectScenarios": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.structure"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectScenarios"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectScenarios"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectScenarios"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectScenarios"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.structure"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectScenarios"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectScenarios.structure"
                    },
                    {
                        "$ref": "#/parameters/body.projectScenarios"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectScenarios"
                ]
            }
        },
        "/notes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.noteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.content"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.isPinned"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.frame"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.reviewData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.componentId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/notes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "notes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.notes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "notes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.noteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.content"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.isPinned"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.frame"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.reviewData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.componentId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "notes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.noteCategoryId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.outputVersionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.parentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.content"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.isAutogenerated"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.isPinned"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.frame"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.reviewData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notes.componentId"
                    },
                    {
                        "$ref": "#/parameters/body.notes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "notes"
                ]
            }
        },
        "/playlistComponents": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.playlistId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.order"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/playlistComponents"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "playlistComponents"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.playlistComponents"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "playlistComponents"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.playlistId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.order"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "playlistComponents"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.playlistId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.componentId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlistComponents.order"
                    },
                    {
                        "$ref": "#/parameters/body.playlistComponents"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "playlistComponents"
                ]
            }
        },
        "/todos": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.todos.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.text"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.doneDate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/todos"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "todos"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.todos"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "todos"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.todos.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.text"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.doneDate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "todos"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.todos.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.isDone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.text"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.todos.doneDate"
                    },
                    {
                        "$ref": "#/parameters/body.todos"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "todos"
                ]
            }
        },
        "/weekDays": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.abbreviation"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/weekDays"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "weekDays"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.weekDays"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "weekDays"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.abbreviation"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "weekDays"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.weekDays.abbreviation"
                    },
                    {
                        "$ref": "#/parameters/body.weekDays"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "weekDays"
                ]
            }
        },
        "/activityTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.displayText"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/activityTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "activityTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.activityTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "activityTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.displayText"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "activityTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activityTypes.displayText"
                    },
                    {
                        "$ref": "#/parameters/body.activityTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "activityTypes"
                ]
            }
        },
        "/events": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.events.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.payload"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.topic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.sender"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/events"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.events"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.events.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.payload"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.topic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.sender"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.events.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.payload"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.status"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.topic"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.sender"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.events.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/body.events"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "events"
                ]
            }
        },
        "/integrationApplicationUsers": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.integrationApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.value"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/integrationApplicationUsers"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "integrationApplicationUsers"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.integrationApplicationUsers"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "integrationApplicationUsers"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.integrationApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.value"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "integrationApplicationUsers"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.integrationApplicationId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.integrationApplicationUsers.value"
                    },
                    {
                        "$ref": "#/parameters/body.integrationApplicationUsers"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "integrationApplicationUsers"
                ]
            }
        },
        "/componentStates": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.componentStates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.componentStates.state"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/componentStates"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "componentStates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.componentStates"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "componentStates"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.componentStates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.componentStates.state"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "componentStates"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.componentStates.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.componentStates.state"
                    },
                    {
                        "$ref": "#/parameters/body.componentStates"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "componentStates"
                ]
            }
        },
        "/priorities": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.priorities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.isCore"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/priorities"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "priorities"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.priorities"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "priorities"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.priorities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.isCore"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "priorities"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.priorities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.value"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.priorities.isCore"
                    },
                    {
                        "$ref": "#/parameters/body.priorities"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "priorities"
                ]
            }
        },
        "/playlists": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.playlists.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.externalLink"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.properties"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isPrivate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isClient"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/playlists"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "playlists"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.playlists"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "playlists"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.playlists.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.externalLink"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.properties"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isPrivate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isClient"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "playlists"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.playlists.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.link"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.externalLink"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.properties"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isPrivate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.playlists.isClient"
                    },
                    {
                        "$ref": "#/parameters/body.playlists"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "playlists"
                ]
            }
        },
        "/securityRoles": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.color"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/securityRoles"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "securityRoles"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.securityRoles"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "securityRoles"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.color"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "securityRoles"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRoles.color"
                    },
                    {
                        "$ref": "#/parameters/body.securityRoles"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "securityRoles"
                ]
            }
        },
        "/statuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.stateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.canBeUsedForFolder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.canBeUsedForOutput"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.frameIOLabelId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.ftrackStatusId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/statuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "statuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.statuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "statuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.stateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.canBeUsedForFolder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.canBeUsedForOutput"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.frameIOLabelId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.ftrackStatusId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.statuses.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.stateId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.canBeUsedForFolder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.canBeUsedForOutput"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.frameIOLabelId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.statuses.ftrackStatusId"
                    },
                    {
                        "$ref": "#/parameters/body.statuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "statuses"
                ]
            }
        },
        "/tags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.tags.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.isHidden"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForFolder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForOutput"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForOutputVersion"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.shortName"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/tags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.tags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.tags.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.isHidden"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForFolder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForOutput"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForOutputVersion"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.shortName"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.tags.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.description"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.isHidden"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForFolder"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForOutput"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.canBeUsedForOutputVersion"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.tags.shortName"
                    },
                    {
                        "$ref": "#/parameters/body.tags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "tags"
                ]
            }
        },
        "/customAttributeBaseTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.attributeType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.name"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/customAttributeBaseTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "customAttributeBaseTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.customAttributeBaseTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "customAttributeBaseTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.attributeType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.name"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeBaseTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.attributeType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.customAttributeBaseTypes.name"
                    },
                    {
                        "$ref": "#/parameters/body.customAttributeBaseTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "customAttributeBaseTypes"
                ]
            }
        },
        "/assigneeRoles": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoles.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoles.name"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/assigneeRoles"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "assigneeRoles"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.assigneeRoles"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "assigneeRoles"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoles.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoles.name"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "assigneeRoles"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoles.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.assigneeRoles.name"
                    },
                    {
                        "$ref": "#/parameters/body.assigneeRoles"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "assigneeRoles"
                ]
            }
        },
        "/active_locks": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.schemaname"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.relname"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.locktype"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.page"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.virtualtransaction"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.pid"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.mode"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.active_locks.granted"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/active_locks"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "active_locks"
                ]
            }
        },
        "/schedulerViewFolderTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViewFolderTypes.schedulerViewId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViewFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/schedulerViewFolderTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "schedulerViewFolderTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.schedulerViewFolderTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "schedulerViewFolderTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViewFolderTypes.schedulerViewId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViewFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "schedulerViewFolderTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViewFolderTypes.schedulerViewId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.schedulerViewFolderTypes.folderTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.schedulerViewFolderTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "schedulerViewFolderTypes"
                ]
            }
        },
        "/attachments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.attachments.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.fileName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.mimeType"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/attachments"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "attachments"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.attachments"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "attachments"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.attachments.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.fileName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.mimeType"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "attachments"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.attachments.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.fileName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.attachments.mimeType"
                    },
                    {
                        "$ref": "#/parameters/body.attachments"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "attachments"
                ]
            }
        },
        "/users": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.users.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.email"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.fullName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.userName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.emailConfirmedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.rawAppMetaData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.rawUserMetaData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.createdAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.updatedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.emailVerified"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.userVerified"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.contractEnd"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.contractStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.hourlyRate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.lunchEnd"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.lunchStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.workEndTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.workStartTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.phone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.color"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/users"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.users"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.users.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.email"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.fullName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.userName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.emailConfirmedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.rawAppMetaData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.rawUserMetaData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.createdAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.updatedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.emailVerified"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.userVerified"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.contractEnd"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.contractStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.hourlyRate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.lunchEnd"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.lunchStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.workEndTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.workStartTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.phone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.color"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.users.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.email"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.fullName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.userName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.emailConfirmedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.rawAppMetaData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.rawUserMetaData"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.createdAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.updatedAt"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.emailVerified"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.userVerified"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.contractEnd"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.contractStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.hourlyRate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.lunchEnd"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.lunchStart"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.workEndTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.workStartTime"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.phone"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.users.color"
                    },
                    {
                        "$ref": "#/parameters/body.users"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/projectDefinitionOutputStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.isClientReviewable"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionOutputStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionOutputStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionOutputStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionOutputStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.isClientReviewable"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionOutputStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionOutputStatuses.isClientReviewable"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionOutputStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionOutputStatuses"
                ]
            }
        },
        "/userWeekDays": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userWeekDays.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userWeekDays.weekDayId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userWeekDays"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userWeekDays"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userWeekDays"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userWeekDays"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userWeekDays.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userWeekDays.weekDayId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userWeekDays"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userWeekDays.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userWeekDays.weekDayId"
                    },
                    {
                        "$ref": "#/parameters/body.userWeekDays"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userWeekDays"
                ]
            }
        },
        "/projectDefinitionTags": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTags.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionTags"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionTags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionTags"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionTags"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTags.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionTags"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTags.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionTags.tagId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionTags"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionTags"
                ]
            }
        },
        "/activities": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.activities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.activityTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.action"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.changes"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.contextId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/activities"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "activities"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.activities"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "activities"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.activities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.activityTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.action"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.changes"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.contextId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "activities"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.activities.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.activityTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.action"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.changes"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.data"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.activities.contextId"
                    },
                    {
                        "$ref": "#/parameters/body.activities"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "activities"
                ]
            }
        },
        "/applications": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isSoftware"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.arguments"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.environment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.family"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.executables"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.label"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/applications"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "applications"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.applications"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "applications"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isSoftware"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.arguments"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.environment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.family"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.executables"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.label"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "applications"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.applications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isActive"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isSoftware"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.arguments"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.environment"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.family"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.executables"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.applications.label"
                    },
                    {
                        "$ref": "#/parameters/body.applications"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "applications"
                ]
            }
        },
        "/typeUser": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeUser.skilledUserId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeUser.skillsId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/typeUser"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "typeUser"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.typeUser"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "typeUser"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeUser.skilledUserId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeUser.skillsId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "typeUser"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.typeUser.skilledUserId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.typeUser.skillsId"
                    },
                    {
                        "$ref": "#/parameters/body.typeUser"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "typeUser"
                ]
            }
        },
        "/projectDefinitionPriorities": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionPriorities.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionPriorities.priorityId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionPriorities"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionPriorities"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionPriorities"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionPriorities"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionPriorities.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionPriorities.priorityId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionPriorities"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionPriorities.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionPriorities.priorityId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionPriorities"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionPriorities"
                ]
            }
        },
        "/projectDefinitionCustomAttributeDefinitions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionCustomAttributeDefinitions.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionCustomAttributeDefinitions.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionCustomAttributeDefinitions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionCustomAttributeDefinitions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionCustomAttributeDefinitions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionCustomAttributeDefinitions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionCustomAttributeDefinitions.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionCustomAttributeDefinitions.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionCustomAttributeDefinitions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionCustomAttributeDefinitions.customAttributeDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionCustomAttributeDefinitions.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionCustomAttributeDefinitions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionCustomAttributeDefinitions"
                ]
            }
        },
        "/advancePayments": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/advancePayments"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "advancePayments"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.advancePayments"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "advancePayments"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "advancePayments"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.advancePayments.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/body.advancePayments"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "advancePayments"
                ]
            }
        },
        "/notifications": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notifications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.seen"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.changes"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.objectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.objectType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.action"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.data"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/notifications"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.notifications"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notifications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.seen"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.changes"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.objectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.objectType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.action"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.data"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.notifications.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.seen"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.changes"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.authorId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.contextId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.contextType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.objectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.objectType"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.action"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.notifications.data"
                    },
                    {
                        "$ref": "#/parameters/body.notifications"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "notifications"
                ]
            }
        },
        "/outputTypes": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.ayonProductTypeId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outputTypes"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outputTypes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outputTypes"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outputTypes"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.ayonProductTypeId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputTypes"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.name"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.shortName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.codeName"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.icon"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.screenPriority"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.isCore"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outputTypes.ayonProductTypeId"
                    },
                    {
                        "$ref": "#/parameters/body.outputTypes"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outputTypes"
                ]
            }
        },
        "/outgoingStatusMappings": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.outgoingFolderNewStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.outputVersionStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.useOtherIncomingFolderStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/outgoingStatusMappings"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappings"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappings"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "outgoingStatusMappings"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.outgoingFolderNewStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.outputVersionStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.useOtherIncomingFolderStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappings"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.outgoingFolderNewStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.outputVersionStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.outgoingStatusMappings.useOtherIncomingFolderStatuses"
                    },
                    {
                        "$ref": "#/parameters/body.outgoingStatusMappings"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "outgoingStatusMappings"
                ]
            }
        },
        "/securityRolePermissions": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.securityRolePermissions.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRolePermissions.permissionId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/securityRolePermissions"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "securityRolePermissions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.securityRolePermissions"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "securityRolePermissions"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.securityRolePermissions.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRolePermissions.permissionId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "securityRolePermissions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.securityRolePermissions.securityRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.securityRolePermissions.permissionId"
                    },
                    {
                        "$ref": "#/parameters/body.securityRolePermissions"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "securityRolePermissions"
                ]
            }
        },
        "/projectDefinitionFolderStatuses": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderStatuses.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/projectDefinitionFolderStatuses"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "projectDefinitionFolderStatuses"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.projectDefinitionFolderStatuses"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "projectDefinitionFolderStatuses"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderStatuses.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionFolderStatuses"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderStatuses.projectDefinitionId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.projectDefinitionFolderStatuses.statusId"
                    },
                    {
                        "$ref": "#/parameters/body.projectDefinitionFolderStatuses"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "projectDefinitionFolderStatuses"
                ]
            }
        },
        "/workerFees": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.paymentStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.isLocked"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.userTimeTrackerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.hourlyRate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.spentHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.workingDuration"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.frameFee"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/workerFees"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "workerFees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.workerFees"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "workerFees"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.paymentStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.isLocked"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.userTimeTrackerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.hourlyRate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.spentHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.workingDuration"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.frameFee"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "workerFees"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.type"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.amount"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.paymentStatusId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.note"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.folderId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.projectId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.payoutId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.color"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.isLocked"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.userTimeTrackerId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.hourlyRate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.spentHours"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.workingDuration"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.frameFee"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.createdDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.workerFees.updatedDate"
                    },
                    {
                        "$ref": "#/parameters/body.workerFees"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "workerFees"
                ]
            }
        },
        "/vacations": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.vacations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.vacationStartDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.vacationEndDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.status"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/vacations"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "vacations"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.vacations"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "vacations"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.vacations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.vacationStartDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.vacationEndDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.status"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "vacations"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.vacations.id"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.vacationStartDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.vacationEndDate"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.vacations.status"
                    },
                    {
                        "$ref": "#/parameters/body.vacations"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "vacations"
                ]
            }
        },
        "/userAssigneeRoleNotificationTypeOverrides": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.enabled"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.emailEnabled"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/range"
                    },
                    {
                        "$ref": "#/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/userAssigneeRoleNotificationTypeOverrides"
                            },
                            "type": "array"
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "userAssigneeRoleNotificationTypeOverrides"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/body.userAssigneeRoleNotificationTypeOverrides"
                    },
                    {
                        "$ref": "#/parameters/select"
                    },
                    {
                        "$ref": "#/parameters/preferPost"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "userAssigneeRoleNotificationTypeOverrides"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.enabled"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.emailEnabled"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userAssigneeRoleNotificationTypeOverrides"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.assigneeRoleId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.notificationTypeId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.userId"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.enabled"
                    },
                    {
                        "$ref": "#/parameters/rowFilter.userAssigneeRoleNotificationTypeOverrides.emailEnabled"
                    },
                    {
                        "$ref": "#/parameters/body.userAssigneeRoleNotificationTypeOverrides"
                    },
                    {
                        "$ref": "#/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "userAssigneeRoleNotificationTypeOverrides"
                ]
            }
        },
        "/rpc/get_user_id_from_api_key": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "apikey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_user_id_from_api_key"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "apikey": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "apikey"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_user_id_from_api_key"
                ]
            }
        },
        "/rpc/get_user_time_trackers": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_live",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_recursive",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_user_time_trackers"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "is_live": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_recursive": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_user_time_trackers"
                ]
            }
        },
        "/rpc/user_is_user_skill_owner": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_skill_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_user_skill_owner"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_skill_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_skill_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_user_skill_owner"
                ]
            }
        },
        "/rpc/create_webhook": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "table_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "trigger_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "webhook_url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "trigger_events",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "http_method",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "headers",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "body",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "timeout_ms",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_webhook"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "body": {
                                    "format": "jsonb"
                                },
                                "headers": {
                                    "format": "jsonb"
                                },
                                "http_method": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "table_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "timeout_ms": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "trigger_events": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "trigger_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "webhook_url": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "table_name",
                                "trigger_name",
                                "webhook_url",
                                "trigger_events"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_webhook"
                ]
            }
        },
        "/rpc/update_versions_status": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "p_output_version_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "p_new_status_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_versions_status"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "p_new_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "p_output_version_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "p_output_version_ids",
                                "p_new_status_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_versions_status"
                ]
            }
        },
        "/rpc/get_version_grid": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_latest",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_recursive",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_client_reviewable",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_my",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "state_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "project_assignee_role_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_assignee_role_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_from_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_version_grid"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_assignee_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_assignee_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_from_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_client_reviewable": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_latest": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_my": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_recursive": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_version_grid"
                ]
            }
        },
        "/rpc/create_folders_from_folder_structure_template": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_template_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "target_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "create_outputs",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "create_todos",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "create_links",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "create_assignees",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "overrides",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folders_from_folder_structure_template"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "create_assignees": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "create_links": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "create_outputs": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "create_todos": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "folder_template_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "overrides": {
                                    "format": "jsonb"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "target_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "folder_template_ids",
                                "target_ids",
                                "project_id",
                                "create_outputs",
                                "create_todos",
                                "create_links",
                                "create_assignees"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folders_from_folder_structure_template"
                ]
            }
        },
        "/rpc/user_is_assignee_of_project": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_assignee_of_project"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_assignee_of_project"
                ]
            }
        },
        "/rpc/get_outputs_recursive": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_external",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_recursive"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "is_external": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_recursive"
                ]
            }
        },
        "/rpc/get_folder_template_placeholders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_template_placeholders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_template_placeholders"
                ]
            }
        },
        "/rpc/add_project_assignees": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "user_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "project_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "assignee_role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_project_assignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "user_ids",
                                "project_ids",
                                "assignee_role_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_project_assignees"
                ]
            }
        },
        "/rpc/get_scheduler_model": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "project_deadline",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "reserve",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_model"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_deadline": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "reserve": {
                                    "format": "integer",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_model"
                ]
            }
        },
        "/rpc/get_base_project_definitions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_base_project_definitions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_base_project_definitions"
                ]
            }
        },
        "/rpc/get_webhooks": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_webhooks"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_webhooks"
                ]
            }
        },
        "/rpc/delete_folder_tags": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "tag_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_tags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "tag_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "tag_ids",
                                "folder_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_tags"
                ]
            }
        },
        "/rpc/get_project_constraints": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_constraints"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_constraints"
                ]
            }
        },
        "/rpc/delete_project_assignees": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "user_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "project_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "assignee_role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_project_assignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "user_ids",
                                "project_ids",
                                "assignee_role_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_project_assignees"
                ]
            }
        },
        "/rpc/get_project_statistics": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_statistics"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_statistics"
                ]
            }
        },
        "/rpc/get_folder_parent_ids": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_parent_ids"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_parent_ids"
                ]
            }
        },
        "/rpc/get_user_hourly_rate": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_user_hourly_rate"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_user_hourly_rate"
                ]
            }
        },
        "/rpc/user_is_time_tracker_owner": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "time_tracker_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_time_tracker_owner"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "time_tracker_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "time_tracker_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_time_tracker_owner"
                ]
            }
        },
        "/rpc/get_output_latest_version_with_thumbnail": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_latest_version_with_thumbnail"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "output_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_latest_version_with_thumbnail"
                ]
            }
        },
        "/rpc/delete_projects": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_projects"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_projects"
                ]
            }
        },
        "/rpc/execute_query": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "ai_query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) execute_query"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ai_query": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ai_query"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) execute_query"
                ]
            }
        },
        "/rpc/create_outgoing_status_mapping": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "new_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "version_status_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_new_status",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "use_other_incoming_folder_statuses",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_outgoing_status_mapping"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_new_status": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "new_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "use_other_incoming_folder_statuses": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "version_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "new_id",
                                "project_definition_id",
                                "version_status_id",
                                "folder_new_status",
                                "use_other_incoming_folder_statuses"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_outgoing_status_mapping"
                ]
            }
        },
        "/rpc/user_can_manage_note": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "note_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_note"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "note_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "note_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_note"
                ]
            }
        },
        "/rpc/get_folders_for_bidding_recursive": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_for_bidding_recursive"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_for_bidding_recursive"
                ]
            }
        },
        "/rpc/user_is_vacation_owner": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "vacation_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_vacation_owner"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "vacation_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "vacation_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_vacation_owner"
                ]
            }
        },
        "/rpc/delete_and_replace_priority": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_priority_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_priority_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_priority"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_priority_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_priority_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_priority_id",
                                "replace_priority_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_priority"
                ]
            }
        },
        "/rpc/user_can_insert_output": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "security_role_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_insert_output"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "security_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "output_folder_id",
                                "security_role_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_insert_output"
                ]
            }
        },
        "/rpc/get_best_name_profiles": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "profiles",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "task_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "task_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "product_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_best_name_profiles"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "host": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "product_type": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "profiles": {
                                    "format": "jsonb"
                                },
                                "task_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "task_type": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "profiles",
                                "host",
                                "task_name",
                                "task_type",
                                "product_type"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_best_name_profiles"
                ]
            }
        },
        "/rpc/create_status_mapping": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "new_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "version_status_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_new_status",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_status_mapping"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_new_status": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "new_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "version_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "new_id",
                                "project_definition_id",
                                "version_status_id",
                                "folder_new_status"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_status_mapping"
                ]
            }
        },
        "/rpc/create_folder_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "restore_deleted",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folder_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb"
                                },
                                "restore_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "changes",
                                "restore_deleted"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folder_many"
                ]
            }
        },
        "/rpc/user_is_project_view_author": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_view_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_project_view_author"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_view_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_view_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_project_view_author"
                ]
            }
        },
        "/rpc/copy_folders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "source_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "target_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) copy_folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "source_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "target_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "source_ids",
                                "target_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) copy_folders"
                ]
            }
        },
        "/rpc/get_project_grid": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "custom_attributes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_custom_attributes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_links",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_assignees",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_recursive",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_folder_template_source",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_grid"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "custom_attributes": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_assignees": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_custom_attributes": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_folder_template_source": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_links": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_recursive": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_grid"
                ]
            }
        },
        "/rpc/get_notes_for_folder": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "page_size",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_notes_for_folder"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "page": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "page_size": {
                                    "format": "integer",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "folder_id",
                                "page_size",
                                "page"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_notes_for_folder"
                ]
            }
        },
        "/rpc/get_folders_by_path": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "input_path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_active_projects",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_my",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_by_path"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_path": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "return_only_active_projects": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_my": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "input_path"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_by_path"
                ]
            }
        },
        "/rpc/delete_note": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "note_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_note"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "note_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "note_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_note"
                ]
            }
        },
        "/rpc/http_header": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) http_header"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) http_header"
                ]
            }
        },
        "/rpc/update_iteration_and_related": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "iteration_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_iteration_and_related"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "iteration_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "iteration_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_iteration_and_related"
                ]
            }
        },
        "/rpc/delete_and_replace_tag": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_tag_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_tag_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_tag"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_tag_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_tag_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_tag_id",
                                "replace_tag_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_tag"
                ]
            }
        },
        "/rpc/upsert_folder_template_bidding_override_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_folder_template_bidding_override_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_folder_template_bidding_override_many"
                ]
            }
        },
        "/rpc/delete_old_events": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_old_events"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_old_events"
                ]
            }
        },
        "/rpc/create_and_assign_output_version_tags": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_and_assign_output_version_tags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_and_assign_output_version_tags"
                ]
            }
        },
        "/rpc/get_folder_paths": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_paths"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_paths"
                ]
            }
        },
        "/rpc/get_folder_code_name_paths": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_code_name_paths"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_code_name_paths"
                ]
            }
        },
        "/rpc/set_default_project_definition": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) set_default_project_definition"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_definition_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) set_default_project_definition"
                ]
            }
        },
        "/rpc/delete_application_file_types": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "application_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "file_type_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_application_file_types"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "application_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "file_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "application_ids",
                                "file_type_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_application_file_types"
                ]
            }
        },
        "/rpc/get_folder_paths_simple": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_paths_simple"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_paths_simple"
                ]
            }
        },
        "/rpc/get_users": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_users"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_users"
                ]
            }
        },
        "/rpc/user_can_manage_attachment": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "attachment_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_attachment"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "attachment_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "attachment_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_attachment"
                ]
            }
        },
        "/rpc/get_project_by_folder_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_folder_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_folder_id"
                ]
            }
        },
        "/rpc/get_playlist_grid": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_active",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_private",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_client",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_from_deleted",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_playlist_grid"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_active": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_client": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_from_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_private": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_playlist_grid"
                ]
            }
        },
        "/rpc/get_project_date_boundaries": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "project_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_date_boundaries"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "project_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_date_boundaries"
                ]
            }
        },
        "/rpc/set_file_types_to_output": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "file_type_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "logical_operator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) set_file_types_to_output"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "file_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "logical_operator": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "output_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "output_id",
                                "file_type_ids",
                                "logical_operator"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) set_file_types_to_output"
                ]
            }
        },
        "/rpc/update_user_time_tracker": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_time_tracker_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "p_description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "start_time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "end_time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "iteration_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_user_time_tracker"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "end_time": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "iteration_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "p_description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "start_time": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "user_time_tracker_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_time_tracker_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_user_time_tracker"
                ]
            }
        },
        "/rpc/find_objects": {
            "get": {
                "parameters": [
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "object_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "bucket",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) find_objects"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "bucket": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "object_ids": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "size": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "object_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) find_objects"
                ]
            }
        },
        "/rpc/get_wasabi_components": {
            "get": {
                "parameters": [
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "days_since_creation",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "timestamp without time zone",
                        "in": "query",
                        "name": "timestamp_filter",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_wasabi_components"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "days_since_creation": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "timestamp_filter": {
                                    "format": "timestamp without time zone",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "days_since_creation",
                                "timestamp_filter"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_wasabi_components"
                ]
            }
        },
        "/rpc/update_project_definition": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_active",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "has_basic_folder_structure",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "directory_structure_settings",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "roots",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "templates",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "output_name_settings",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "template_name_profiles",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "json",
                        "in": "query",
                        "name": "task_link_patterns",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_priority_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_note_category_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_folder_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_output_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_activity_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_folder_status_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "default_output_status_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "custom_attribute_definition_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "priority_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "note_category_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "output_type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "activity_type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_status_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "output_status_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "tag_ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_project_definition"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "activity_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "custom_attribute_definition_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "default_activity_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_folder_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_note_category_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_output_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_output_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_priority_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "default_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "directory_structure_settings": {
                                    "format": "jsonb"
                                },
                                "folder_status_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "has_basic_folder_structure": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "is_active": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "note_category_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "output_name_settings": {
                                    "format": "jsonb"
                                },
                                "output_status_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "output_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "priority_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "roots": {
                                    "format": "jsonb"
                                },
                                "tag_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "task_link_patterns": {
                                    "format": "json"
                                },
                                "template_name_profiles": {
                                    "format": "jsonb"
                                },
                                "templates": {
                                    "format": "jsonb"
                                },
                                "type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "project_definition_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_project_definition"
                ]
            }
        },
        "/rpc/get_other_publish_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "host",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "suffix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "json",
                        "in": "query",
                        "name": "default_values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_other_publish_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "comment": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "default_values": {
                                    "format": "json"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "host": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "output_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "suffix": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "project_id",
                                "folder_id",
                                "output_type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_other_publish_data"
                ]
            }
        },
        "/rpc/get_wasabi_assigned_components": {
            "get": {
                "parameters": [
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "days_since_creation",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_wasabi_assigned_components"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "days_since_creation": {
                                    "format": "integer",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "days_since_creation"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_wasabi_assigned_components"
                ]
            }
        },
        "/rpc/get_project_chart_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "state_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_chart_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_chart_data"
                ]
            }
        },
        "/rpc/collect_chart_data": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) collect_chart_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) collect_chart_data"
                ]
            }
        },
        "/rpc/get_client_folders_for_current_user": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "state_ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_client_folders_for_current_user"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_client_folders_for_current_user"
                ]
            }
        },
        "/rpc/trim_name": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) trim_name"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) trim_name"
                ]
            }
        },
        "/rpc/get_folder_by_name_and_parent": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "project_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "parent_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "folder_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_by_name_and_parent"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "parent_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "project_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_name",
                                "parent_name",
                                "folder_name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_by_name_and_parent"
                ]
            }
        },
        "/rpc/add_folder_template_links_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_folder_template_links_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_folder_template_links_many"
                ]
            }
        },
        "/rpc/user_can_manage_playlist": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "playlist_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_playlist"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "playlist_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "playlist_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_playlist"
                ]
            }
        },
        "/rpc/user_can_insert_output_version": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "security_role_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_insert_output_version"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "security_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "output_id",
                                "security_role_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_insert_output_version"
                ]
            }
        },
        "/rpc/get_project_directory_structure": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_directory_structure"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_directory_structure"
                ]
            }
        },
        "/rpc/user_can_insert_component": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_version_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "security_role_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_insert_component"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_version_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "security_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "output_version_id",
                                "security_role_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_insert_component"
                ]
            }
        },
        "/rpc/upsert_type_bidding": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "bidding_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "bidding_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_type_bidding"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "bidding_data": {
                                    "format": "jsonb"
                                },
                                "bidding_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type_id",
                                "bidding_id",
                                "bidding_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_type_bidding"
                ]
            }
        },
        "/rpc/create_scheduler_view": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_public",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "pivot_mode",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "table_state",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "filter",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "owner_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "view_group_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_scheduler_view"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "filter": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "is_public": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "owner_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "pivot_mode": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "table_state": {
                                    "format": "jsonb"
                                },
                                "view_group_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "description",
                                "is_public",
                                "pivot_mode",
                                "table_state",
                                "filter"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_scheduler_view"
                ]
            }
        },
        "/rpc/can_update_time_tracker": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "time_tracker_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) can_update_time_tracker"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "time_tracker_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "time_tracker_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) can_update_time_tracker"
                ]
            }
        },
        "/rpc/create_current_scenario": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_current_scenario"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_current_scenario"
                ]
            }
        },
        "/rpc/user_is_note_author": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "note_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_note_author"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "note_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "note_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_note_author"
                ]
            }
        },
        "/rpc/delete_folder_assignee_templates": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "user_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_template_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "assignee_role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_assignee_templates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_template_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "user_ids",
                                "folder_template_ids",
                                "assignee_role_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_assignee_templates"
                ]
            }
        },
        "/rpc/create_payout": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "note",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "payment_reference",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "payment_status_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "author_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "create_empty",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "worker_fee_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_payout"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "author_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "create_empty": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "end_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "note": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "payment_reference": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "payment_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "start_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "worker_fee_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "name",
                                "note",
                                "payment_reference",
                                "payment_status_id",
                                "start_date",
                                "end_date",
                                "user_id",
                                "author_id",
                                "create_empty",
                                "worker_fee_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_payout"
                ]
            }
        },
        "/rpc/get_project_grid_attributes": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "custom_attributes",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_grid_attributes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "custom_attributes": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_grid_attributes"
                ]
            }
        },
        "/rpc/get_project_tasks": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "project_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_tasks"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "project_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_tasks"
                ]
            }
        },
        "/rpc/upsert_actions": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb[]",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_actions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb[]",
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "required": [
                                "changes"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_actions"
                ]
            }
        },
        "/rpc/create_and_assign_folder_type": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_and_assign_folder_type"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_and_assign_folder_type"
                ]
            }
        },
        "/rpc/user_is_me": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_update_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_me"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_update_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_update_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_me"
                ]
            }
        },
        "/rpc/upsert_notes": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_notes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "changes"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_notes"
                ]
            }
        },
        "/rpc/create_and_assign_folder_tags": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_and_assign_folder_tags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_and_assign_folder_tags"
                ]
            }
        },
        "/rpc/get_outputs_by_folder_ids": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_by_folder_ids"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "folder_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_by_folder_ids"
                ]
            }
        },
        "/rpc/delete_output_version_tags": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "tag_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "output_version_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_output_version_tags"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_version_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "tag_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "tag_ids",
                                "output_version_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_output_version_tags"
                ]
            }
        },
        "/rpc/get_best_path_profiles": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "profiles",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "host",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "task_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "task_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "product_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_best_path_profiles"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "host": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "product_type": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "profiles": {
                                    "format": "jsonb"
                                },
                                "task_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "task_type": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "profiles",
                                "host",
                                "task_name",
                                "task_type",
                                "product_type"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_best_path_profiles"
                ]
            }
        },
        "/rpc/get_settings": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_settings"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_settings"
                ]
            }
        },
        "/rpc/find_constraints": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "complexity",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) find_constraints"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "complexity": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id",
                                "complexity",
                                "type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) find_constraints"
                ]
            }
        },
        "/rpc/upsert_security_role_permissions": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "permission_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "security_role_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_security_role_permissions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "permission_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "security_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "permission_id",
                                "security_role_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_security_role_permissions"
                ]
            }
        },
        "/rpc/add_user_time_tracker": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "start_time",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "end_time",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "iteration_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_user_time_tracker"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "end_time": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "iteration_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "start_time": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id",
                                "description",
                                "start_time",
                                "end_time",
                                "user_id",
                                "iteration_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_user_time_tracker"
                ]
            }
        },
        "/rpc/get_client_view_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "assignee_role_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "version_state_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_my",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_client_view_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_my": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "version_state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_client_view_data"
                ]
            }
        },
        "/rpc/get_project_time_trackers": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_time_trackers"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id",
                                "folder_type_id",
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_time_trackers"
                ]
            }
        },
        "/rpc/get_notes": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_notes"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_notes"
                ]
            }
        },
        "/rpc/upsert_note": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "note_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "note_category_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_version_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "component_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "author_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "frame",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "json",
                        "in": "query",
                        "name": "review_data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_autogenerated",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_pinned",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "attachments",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_note"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "attachments": {
                                    "format": "jsonb"
                                },
                                "author_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "component_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "content": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "frame": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "is_autogenerated": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "is_pinned": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "note_category_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "note_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "output_version_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "review_data": {
                                    "format": "json"
                                }
                            },
                            "required": [
                                "note_id",
                                "folder_id",
                                "note_category_id",
                                "content"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_note"
                ]
            }
        },
        "/rpc/user_can_manage_user_skill": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_skill_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_user_skill"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_skill_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_skill_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_user_skill"
                ]
            }
        },
        "/rpc/set_output_version_as_main": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_version_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) set_output_version_as_main"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_version_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "output_version_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) set_output_version_as_main"
                ]
            }
        },
        "/rpc/delete_and_replace_folder_type": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_folder_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_folder_type_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_folder_type"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_folder_type_id",
                                "replace_folder_type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_folder_type"
                ]
            }
        },
        "/rpc/check_thumbnail_exists": {
            "get": {
                "parameters": [
                    {
                        "format": "character varying",
                        "in": "query",
                        "name": "objectname",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) check_thumbnail_exists"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "objectname": {
                                    "format": "character varying",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "objectname"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) check_thumbnail_exists"
                ]
            }
        },
        "/rpc/get_timeline_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "project_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "start_date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "end_date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_timeline_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "end_date": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "project_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "start_date": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_timeline_data"
                ]
            }
        },
        "/rpc/user_can_manage_vacation": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "vacation_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_vacation"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "vacation_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "vacation_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_vacation"
                ]
            }
        },
        "/rpc/has_read_permission_for_custom_attribute": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "custom_attribute_definition_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) has_read_permission_for_custom_attribute"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "custom_attribute_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "custom_attribute_definition_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) has_read_permission_for_custom_attribute"
                ]
            }
        },
        "/rpc/parse_root": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "roots",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) parse_root"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "roots": {
                                    "format": "jsonb"
                                },
                                "template": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "template",
                                "roots"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) parse_root"
                ]
            }
        },
        "/rpc/update_playlist_components_order": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "playlist_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "component_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_playlist_components_order"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "component_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "playlist_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "playlist_id",
                                "component_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_playlist_components_order"
                ]
            }
        },
        "/rpc/get_project_by_component_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "component_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_component_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "component_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "component_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_component_id"
                ]
            }
        },
        "/rpc/get_current_user_security_role_id": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_current_user_security_role_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_current_user_security_role_id"
                ]
            }
        },
        "/rpc/update_ftrack_status_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "soko_status_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "ftrack_status_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_ftrack_status_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ftrack_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "soko_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "soko_status_id",
                                "ftrack_status_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_ftrack_status_id"
                ]
            }
        },
        "/rpc/get_folders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders"
                ]
            }
        },
        "/rpc/current_user_id": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) current_user_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) current_user_id"
                ]
            }
        },
        "/rpc/duplicate_folder_template": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_template_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "new_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "new_parent_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) duplicate_folder_template"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_template_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "new_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "new_parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_template_id",
                                "new_name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) duplicate_folder_template"
                ]
            }
        },
        "/rpc/delete_and_replace_type": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_type_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_type"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_type_id",
                                "replace_type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_type"
                ]
            }
        },
        "/rpc/get_folders_for_user": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "state_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_for_user"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_for_user"
                ]
            }
        },
        "/rpc/parse_templates": {
            "get": {
                "parameters": [
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "templates",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "template_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) parse_templates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "template_data": {
                                    "format": "jsonb"
                                },
                                "templates": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "templates",
                                "template_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) parse_templates"
                ]
            }
        },
        "/rpc/get_review_view_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "assignee_role_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "version_state_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_my",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_review_view_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_my": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "version_state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_review_view_data"
                ]
            }
        },
        "/rpc/user_has_permission_silent": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "security_role_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_has_permission_silent"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "security_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "security_role_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_has_permission_silent"
                ]
            }
        },
        "/rpc/get_latest_version_with_thumbnail": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_latest_version_with_thumbnail"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_latest_version_with_thumbnail"
                ]
            }
        },
        "/rpc/get_components": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "version_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "root_files",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "openable_files",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "supported_files",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_components"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "openable_files": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "root_files": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "supported_files": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "version_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids",
                                "version_ids",
                                "root_files",
                                "openable_files",
                                "supported_files"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_components"
                ]
            }
        },
        "/rpc/user_is_attachment_author": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "attachment_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_attachment_author"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "attachment_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "attachment_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_attachment_author"
                ]
            }
        },
        "/rpc/delete_folders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folders"
                ]
            }
        },
        "/rpc/upsert_folder_template_bidding_override": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_template_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "bidding_override_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "bidding_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_folder_template_bidding_override"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "bidding_data": {
                                    "format": "jsonb"
                                },
                                "bidding_override_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_template_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_template_id",
                                "bidding_override_id",
                                "bidding_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_folder_template_bidding_override"
                ]
            }
        },
        "/rpc/get_grouped_worker_fees": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "fee_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "payment_status_ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_grouped_worker_fees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "end_date": {
                                    "format": "date",
                                    "type": "string"
                                },
                                "fee_type": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "payment_status_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "start_date": {
                                    "format": "date",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "fee_type",
                                "start_date",
                                "end_date"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_grouped_worker_fees"
                ]
            }
        },
        "/rpc/update_zero_hourly_rates_for_user": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_zero_hourly_rates_for_user"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_zero_hourly_rates_for_user"
                ]
            }
        },
        "/rpc/create_component_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_component_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "changes"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_component_many"
                ]
            }
        },
        "/rpc/get_folder_path_ids": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_path_ids"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_path_ids"
                ]
            }
        },
        "/rpc/upsert_output_automatic_actions": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_output_automatic_actions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_output_automatic_actions"
                ]
            }
        },
        "/rpc/delete_user_time_tracker": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_time_tracker_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_user_time_tracker"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_time_tracker_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_time_tracker_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_user_time_tracker"
                ]
            }
        },
        "/rpc/get_project_by_version_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "version_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_version_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "version_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "version_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_version_id"
                ]
            }
        },
        "/rpc/log_activity": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "p_change_json",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "p_data_json",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "p_context_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "p_context_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "p_folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "p_action_label",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "p_activity_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "p_context_record_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) log_activity"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "p_action_label": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "p_activity_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "p_change_json": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "p_context_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "p_context_record_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "p_context_type": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "p_data_json": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "p_folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "p_change_json",
                                "p_data_json",
                                "p_context_id",
                                "p_context_type",
                                "p_folder_id",
                                "p_action_label",
                                "p_activity_type_id",
                                "p_context_record_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) log_activity"
                ]
            }
        },
        "/rpc/create_folder_template": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_code_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_output_templates",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_todo_templates",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_link_templates",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_assignee_templates",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folder_template"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "folder_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "save_assignee_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "save_link_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "save_output_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "save_todo_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "template_code_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_ids",
                                "template_name",
                                "template_code_name",
                                "folder_type_id",
                                "description",
                                "save_output_templates",
                                "save_todo_templates",
                                "save_link_templates",
                                "save_assignee_templates"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folder_template"
                ]
            }
        },
        "/rpc/find_common_folder_parent": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) find_common_folder_parent"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) find_common_folder_parent"
                ]
            }
        },
        "/rpc/create_user_skill": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "skill_level",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_user_skill"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "skill_level": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "type_id",
                                "skill_level"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_user_skill"
                ]
            }
        },
        "/rpc/get_playlists": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_playlists"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_playlists"
                ]
            }
        },
        "/rpc/get_scheduler_grid": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "custom_attributes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_custom_attributes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_links",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_assignees",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_recursive",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_iterations",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_grid"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "custom_attributes": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_assignees": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_custom_attributes": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_iterations": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_links": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_recursive": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_grid"
                ]
            }
        },
        "/rpc/user_has_permission": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "security_role_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_has_permission"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "security_role_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "security_role_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_has_permission"
                ]
            }
        },
        "/rpc/get_template_keys": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "host",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "suffix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "json",
                        "in": "query",
                        "name": "default_values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_template_keys"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "comment": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "default_values": {
                                    "format": "json"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "host": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "output_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "suffix": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "project_id",
                                "folder_id",
                                "output_type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_template_keys"
                ]
            }
        },
        "/rpc/get_scheduler_constraints": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_constraints"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "end_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "start_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id",
                                "start_date",
                                "end_date"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_constraints"
                ]
            }
        },
        "/rpc/generate_api_token": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) generate_api_token"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) generate_api_token"
                ]
            }
        },
        "/rpc/delete_security_role_permissions": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "permission_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "security_role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_security_role_permissions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "permission_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "security_role_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "permission_id",
                                "security_role_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_security_role_permissions"
                ]
            }
        },
        "/rpc/get_output_versions_by_output_ids": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "output_ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_versions_by_output_ids"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "output_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_versions_by_output_ids"
                ]
            }
        },
        "/rpc/delete_and_replace_note_category": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_note_category_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_note_category_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_note_category"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_note_category_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_note_category_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_note_category_id",
                                "replace_note_category_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_note_category"
                ]
            }
        },
        "/rpc/update_scheduler_view": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_public",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "pivot_mode",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "table_state",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "filter",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "owner_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "view_group_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_scheduler_view"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "filter": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "is_public": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "owner_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "pivot_mode": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "table_state": {
                                    "format": "jsonb"
                                },
                                "view_group_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "description",
                                "is_public",
                                "pivot_mode",
                                "table_state",
                                "filter"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_scheduler_view"
                ]
            }
        },
        "/rpc/get_folders_recursive": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_recursive"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_recursive"
                ]
            }
        },
        "/rpc/update_parents_many": {
            "get": {
                "parameters": [
                    {
                        "format": "public.parent_child_type[]",
                        "in": "query",
                        "name": "parent_name_child_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_parent_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "parent_folders",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_parents_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "parent_folders": {
                                    "format": "jsonb"
                                },
                                "parent_name_child_ids": {
                                    "format": "public.parent_child_type[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "parent_parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "parent_name_child_ids",
                                "parent_parent_id",
                                "parent_folders"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_parents_many"
                ]
            }
        },
        "/rpc/user_can_manage_view": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "view_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_view"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "view_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "view_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_view"
                ]
            }
        },
        "/rpc/update_folder_custom_attribute_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folder_custom_attribute_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "changes"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folder_custom_attribute_many"
                ]
            }
        },
        "/rpc/get_project_root_folder": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_root_folder"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_root_folder"
                ]
            }
        },
        "/rpc/stop_user_time_tracker": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) stop_user_time_tracker"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) stop_user_time_tracker"
                ]
            }
        },
        "/rpc/create_project_definition": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "project_definition_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "custom_attribute_definition_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "priority_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "note_category_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "output_type_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "type_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "activity_type_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_status_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "output_status_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "tag_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "directory_structure_settings",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "roots",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "templates",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "output_name_settings",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "template_name_profiles",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "task_link_patterns",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_project_definition"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "activity_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "custom_attribute_definition_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "directory_structure_settings": {
                                    "format": "jsonb"
                                },
                                "folder_status_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "note_category_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "output_name_settings": {
                                    "format": "jsonb"
                                },
                                "output_status_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "output_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "priority_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "project_definition_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "roots": {
                                    "format": "jsonb"
                                },
                                "tag_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "task_link_patterns": {
                                    "format": "jsonb"
                                },
                                "template_name_profiles": {
                                    "format": "jsonb"
                                },
                                "templates": {
                                    "format": "jsonb"
                                },
                                "type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "project_definition_name",
                                "custom_attribute_definition_ids",
                                "priority_ids",
                                "note_category_ids",
                                "folder_type_ids",
                                "output_type_ids",
                                "type_ids",
                                "activity_type_ids",
                                "folder_status_ids",
                                "output_status_ids",
                                "tag_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_project_definition"
                ]
            }
        },
        "/rpc/delete_iteration": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "iteration_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_iteration"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "iteration_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "iteration_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_iteration"
                ]
            }
        },
        "/rpc/folder_code_name": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "input_string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) folder_code_name"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_string": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "input_string",
                                "parent_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) folder_code_name"
                ]
            }
        },
        "/rpc/user_can_manage_project_view": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_view_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_project_view"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_view_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_view_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_project_view"
                ]
            }
        },
        "/rpc/start_user_time_tracker": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) start_user_time_tracker"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) start_user_time_tracker"
                ]
            }
        },
        "/rpc/user_can_manage_notification": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "notification_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_notification"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "notification_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "notification_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_notification"
                ]
            }
        },
        "/rpc/duplicate_project_definition": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "project_definition_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) duplicate_project_definition"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_definition_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_definition_id",
                                "project_definition_name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) duplicate_project_definition"
                ]
            }
        },
        "/rpc/get_project_tree_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "max_level",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_tree_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "max_level": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_tree_data"
                ]
            }
        },
        "/rpc/update_folder_custom_attribute": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "custom_attribute",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "attribute_value",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folder_custom_attribute"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "attribute_value": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "custom_attribute": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id",
                                "custom_attribute",
                                "attribute_value"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folder_custom_attribute"
                ]
            }
        },
        "/rpc/get_custom_attributes_for_folders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "custom_attributes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_from_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_custom_attributes_for_folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "custom_attributes": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_from_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_custom_attributes_for_folders"
                ]
            }
        },
        "/rpc/delete_folder_template_links_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_template_links_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_template_links_many"
                ]
            }
        },
        "/rpc/get_outputs_by_ids": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_by_ids"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_by_ids"
                ]
            }
        },
        "/rpc/get_latest_version_of_folder": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_latest_version_of_folder"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_latest_version_of_folder"
                ]
            }
        },
        "/rpc/get_security_role_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_security_role_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_security_role_id"
                ]
            }
        },
        "/rpc/code_name": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "input_string",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) code_name"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_string": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "input_string"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) code_name"
                ]
            }
        },
        "/rpc/delete_folder_links_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_links_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_links_many"
                ]
            }
        },
        "/rpc/add_type_to_project_definition": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "numeric",
                        "in": "query",
                        "name": "price",
                        "required": false,
                        "type": "number"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_type_to_project_definition"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "price": {
                                    "format": "numeric",
                                    "type": "number"
                                },
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_definition_id",
                                "type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_type_to_project_definition"
                ]
            }
        },
        "/rpc/delete_folder_assignees": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "user_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "assignee_role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_assignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "user_ids",
                                "folder_ids",
                                "assignee_role_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_folder_assignees"
                ]
            }
        },
        "/rpc/update_naming_on_empty_outputs": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_naming_on_empty_outputs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_ids",
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_naming_on_empty_outputs"
                ]
            }
        },
        "/rpc/get_output_versions": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_versions"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_versions"
                ]
            }
        },
        "/rpc/check_entities_affected_by_deletion": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "table_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "filter_column_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_entity_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_table_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_filter_column_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "definition_join_table_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "definition_filter_column_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) check_entities_affected_by_deletion"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "definition_filter_column_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "definition_join_table_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "delete_entity_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "filter_column_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "table_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_filter_column_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_table_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "table_name",
                                "filter_column_name",
                                "delete_entity_id",
                                "template_table_name",
                                "template_filter_column_name",
                                "definition_join_table_name",
                                "definition_filter_column_name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) check_entities_affected_by_deletion"
                ]
            }
        },
        "/rpc/delete_webhook": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "table_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "trigger_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_webhook"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "table_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "trigger_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "table_name",
                                "trigger_name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_webhook"
                ]
            }
        },
        "/rpc/update_folders_from_scenario": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_scenario_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "use_soft_assignee_as_assignee",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "update_ats_deadline",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "range_start",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "range_end",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "structure",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folders_from_scenario"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_scenario_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "range_end": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "range_start": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "structure": {
                                    "format": "jsonb"
                                },
                                "update_ats_deadline": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "use_soft_assignee_as_assignee": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "project_scenario_id",
                                "use_soft_assignee_as_assignee",
                                "update_ats_deadline"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folders_from_scenario"
                ]
            }
        },
        "/rpc/add_folder_assignees": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "user_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "assignee_role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_folder_assignees"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_role_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "user_ids",
                                "folder_ids",
                                "assignee_role_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_folder_assignees"
                ]
            }
        },
        "/rpc/get_folders_recursive_many": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "parent_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_recursive_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "parent_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "parent_ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_recursive_many"
                ]
            }
        },
        "/rpc/get_folder_linked_outputs": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_linked_outputs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_linked_outputs"
                ]
            }
        },
        "/rpc/generate_uuid": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "seed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) generate_uuid"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seed": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "seed"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) generate_uuid"
                ]
            }
        },
        "/rpc/create_folder_template_structure": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_code_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_output_templates",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_todo_templates",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_link_templates",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "save_assignee_templates",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folder_template_structure"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "folder_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "save_assignee_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "save_link_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "save_output_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "save_todo_templates": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "template_code_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id",
                                "template_name",
                                "template_code_name",
                                "folder_type_id",
                                "description",
                                "save_output_templates",
                                "save_todo_templates",
                                "save_link_templates",
                                "save_assignee_templates"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_folder_template_structure"
                ]
            }
        },
        "/rpc/user_can_manage_user": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_update_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_user"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_update_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_update_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_can_manage_user"
                ]
            }
        },
        "/rpc/get_project_by_output_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_output_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "output_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "output_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_by_output_id"
                ]
            }
        },
        "/rpc/get_folders_for_current_user": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "folder_type_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "state_ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_for_current_user"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_type_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "state_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_for_current_user"
                ]
            }
        },
        "/rpc/get_next_version_number": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "outcome_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_next_version_number"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "outcome_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "outcome_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_next_version_number"
                ]
            }
        },
        "/rpc/create_project_scenario": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "structure",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_project_scenario"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "structure": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "structure"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_project_scenario"
                ]
            }
        },
        "/rpc/duplicate_folder": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "new_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "new_code_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) duplicate_folder"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "new_code_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "new_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id",
                                "new_name",
                                "new_code_name"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) duplicate_folder"
                ]
            }
        },
        "/rpc/get_action_placeholders": {
            "get": {
                "parameters": [
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "from_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "to_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_my",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_action_placeholders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "from_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "return_only_my": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "to_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "from_date",
                                "to_date"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_action_placeholders"
                ]
            }
        },
        "/rpc/get_output_name": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "suffix",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_name"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "suffix": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id",
                                "suffix"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_output_name"
                ]
            }
        },
        "/rpc/user_is_view_author": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "view_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_view_author"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "view_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "view_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_view_author"
                ]
            }
        },
        "/rpc/update_webhook": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "table_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "trigger_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "webhook_url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "trigger_events",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "http_method",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "headers",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "body",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "timeout_ms",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_webhook"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "body": {
                                    "format": "jsonb"
                                },
                                "headers": {
                                    "format": "jsonb"
                                },
                                "http_method": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "table_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "timeout_ms": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "trigger_events": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "trigger_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "webhook_url": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "table_name",
                                "trigger_name",
                                "webhook_url",
                                "trigger_events"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_webhook"
                ]
            }
        },
        "/rpc/get_folders_by_ids": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_by_ids"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_by_ids"
                ]
            }
        },
        "/rpc/get_related_folders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_related_folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_related_folders"
                ]
            }
        },
        "/rpc/delete_old_jobs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_old_jobs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_old_jobs"
                ]
            }
        },
        "/rpc/upsert_folder_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "restore_deleted",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_folder_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb"
                                },
                                "restore_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "changes",
                                "restore_deleted"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) upsert_folder_many"
                ]
            }
        },
        "/rpc/is_authenticated": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "apikey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) is_authenticated"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "apikey": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "apikey"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) is_authenticated"
                ]
            }
        },
        "/rpc/parse_template": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "template_data",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_type",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) parse_template"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "template": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_data": {
                                    "format": "jsonb"
                                },
                                "template_type": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "template",
                                "template_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) parse_template"
                ]
            }
        },
        "/rpc/delete_storage_objects": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "bucket_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "base_filename",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_storage_objects"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "base_filename": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "bucket_name": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "bucket_name",
                                "base_filename"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_storage_objects"
                ]
            }
        },
        "/rpc/delete_and_replace_status": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_status_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_status_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_status"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_status_id",
                                "replace_status_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_status"
                ]
            }
        },
        "/rpc/user_is_notification_owner": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "notification_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_notification_owner"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "notification_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "notification_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_notification_owner"
                ]
            }
        },
        "/rpc/create_project": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "new_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_definition_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "create_new_project_definition",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_status_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "code_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "short_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "timestamp with time zone",
                        "in": "query",
                        "name": "end_date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "icon",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "color",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "client_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "assignee_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "manager_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "reviewer_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "client_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "custom_attributes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_project"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "assignee_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "client_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "client_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "code_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "color": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "create_new_project_definition": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "custom_attributes": {
                                    "format": "jsonb"
                                },
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "end_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                },
                                "icon": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "manager_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "new_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_definition_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_status_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "reviewer_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "short_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "start_date": {
                                    "format": "timestamp with time zone",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "new_id",
                                "project_definition_id",
                                "create_new_project_definition",
                                "project_status_id",
                                "name",
                                "code_name",
                                "short_name",
                                "start_date",
                                "end_date",
                                "description",
                                "icon",
                                "color",
                                "client_id",
                                "assignee_ids",
                                "manager_ids",
                                "reviewer_ids",
                                "client_ids",
                                "custom_attributes"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_project"
                ]
            }
        },
        "/rpc/create_playlist": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "component_ids",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "playlist_name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "link",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "external_link",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_active",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_private",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "is_client",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "properties",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_playlist"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "component_ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "description": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "external_link": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "is_active": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "is_client": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "is_private": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "link": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "playlist_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "properties": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "component_ids",
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_playlist"
                ]
            }
        },
        "/rpc/user_is_playlist_author": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "playlist_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_playlist_author"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "playlist_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "playlist_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) user_is_playlist_author"
                ]
            }
        },
        "/rpc/prepare_template_keys_variants": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) prepare_template_keys_variants"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) prepare_template_keys_variants"
                ]
            }
        },
        "/rpc/get_enumerators": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_enumerators"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_enumerators"
                ]
            }
        },
        "/rpc/get_project_folders": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "max_level",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_folders"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "max_level": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_folders"
                ]
            }
        },
        "/rpc/get_outputs_by_project_id": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_by_project_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_outputs_by_project_id"
                ]
            }
        },
        "/rpc/get_project_summary": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "parent_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_recursive",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_latest",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_summary"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "parent_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_latest": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_recursive": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_summary"
                ]
            }
        },
        "/rpc/update_folder_financial_data_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "changes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folder_financial_data_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "changes": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "changes"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_folder_financial_data_many"
                ]
            }
        },
        "/rpc/get_project_size": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_size"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_project_size"
                ]
            }
        },
        "/rpc/get_scheduler_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "integer",
                        "in": "query",
                        "name": "limit_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_deleted",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "limit_number": {
                                    "format": "integer",
                                    "type": "integer"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "return_deleted": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_scheduler_data"
                ]
            }
        },
        "/rpc/delete_and_replace_output_type": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "delete_output_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "replace_output_type_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_output_type"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "delete_output_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "replace_output_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "delete_output_type_id",
                                "replace_output_type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_and_replace_output_type"
                ]
            }
        },
        "/rpc/get_default_studio_type_price": {
            "get": {
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_default_studio_type_price"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_default_studio_type_price"
                ]
            }
        },
        "/rpc/get_folder_by_path": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "folder_path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_by_path"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_path": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_path"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_by_path"
                ]
            }
        },
        "/rpc/unaccent": {
            "get": {
                "parameters": [
                    {
                        "format": "text",
                        "in": "query",
                        "name": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) unaccent"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) unaccent"
                ]
            }
        },
        "/rpc/get_folder_templates": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid[]",
                        "in": "query",
                        "name": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_templates"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ids": {
                                    "format": "uuid[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folder_templates"
                ]
            }
        },
        "/rpc/get_folders_by_paths": {
            "get": {
                "parameters": [
                    {
                        "format": "text[]",
                        "in": "query",
                        "name": "input_paths",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_active_projects",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "boolean",
                        "in": "query",
                        "name": "return_only_my",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_by_paths"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_paths": {
                                    "format": "text[]",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "return_only_active_projects": {
                                    "format": "boolean",
                                    "type": "boolean"
                                },
                                "return_only_my": {
                                    "format": "boolean",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "input_paths"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_folders_by_paths"
                ]
            }
        },
        "/rpc/add_folder_links_many": {
            "get": {
                "parameters": [
                    {
                        "format": "jsonb",
                        "in": "query",
                        "name": "input_data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_folder_links_many"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "input_data": {
                                    "format": "jsonb"
                                }
                            },
                            "required": [
                                "input_data"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) add_folder_links_many"
                ]
            }
        },
        "/rpc/get_external_inputs": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_external_inputs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "folder_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_external_inputs"
                ]
            }
        },
        "/rpc/get_publish_data": {
            "get": {
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "project_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "folder_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "uuid",
                        "in": "query",
                        "name": "output_type_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "host",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "suffix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "text",
                        "in": "query",
                        "name": "template_name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "json",
                        "in": "query",
                        "name": "default_values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_publish_data"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "name": "args",
                        "required": true,
                        "schema": {
                            "properties": {
                                "comment": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "default_values": {
                                    "format": "json"
                                },
                                "folder_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "host": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "output_type_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "project_id": {
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "suffix": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_name": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "template_type": {
                                    "format": "text",
                                    "type": "string"
                                },
                                "user_id": {
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id",
                                "project_id",
                                "folder_id",
                                "output_type_id"
                            ],
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/preferParams"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/vnd.pgrst.object+json;nulls=stripped",
                    "application/vnd.pgrst.object+json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) get_publish_data"
                ]
            }
        }
    },
    "definitions": {
        "types": {
            "required": [
                "id",
                "folderTypeId",
                "name",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "price": {
                    "format": "real",
                    "type": "number"
                },
                "biddingId": {
                    "description": "Note:\nThis is a Foreign Key to `biddings.id`.<fk table='biddings' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitionTypes": {
            "required": [
                "projectDefinitionId",
                "typeId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "typeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "price": {
                    "default": 0,
                    "format": "real",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "apiKeys": {
            "required": [
                "id",
                "userId",
                "token",
                "createdAt"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "token": {
                    "default": "public.generate_api_token()",
                    "format": "text",
                    "type": "string"
                },
                "createdAt": {
                    "default": "timezone('UTC'::text, now())",
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "viewGroups": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "iterations": {
            "required": [
                "id",
                "number",
                "isDone",
                "folderId",
                "name",
                "isIndependent"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "number": {
                    "format": "smallint",
                    "type": "integer"
                },
                "isDone": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "availableToStart": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "deadline": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "plannedHours": {
                    "format": "numeric",
                    "type": "number"
                },
                "startDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "endDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "softAssigneeId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "assigneeId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "usedHours": {
                    "format": "numeric",
                    "type": "number"
                },
                "isIndependent": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "userSharedComponents": {
            "required": [
                "userId",
                "componentId"
            ],
            "properties": {
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "componentId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `components.id`.<fk table='components' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "integrationApplications": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "components": {
            "required": [
                "id",
                "outputVersionId",
                "fileTypeId",
                "relativePath",
                "isAutogenerated",
                "projectId",
                "isReviewable",
                "isWebComponent"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputVersionId": {
                    "description": "Note:\nThis is a Foreign Key to `outputVersions.id`.<fk table='outputVersions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "fileTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `fileTypes.id`.<fk table='fileTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "componentStateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "relativePath": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "isAutogenerated": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "publisherOs": {
                    "format": "text",
                    "type": "string"
                },
                "data": {
                    "format": "jsonb"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "isReviewable": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "isWebComponent": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "webLink": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outputVersions": {
            "required": [
                "id",
                "outputId",
                "statusId",
                "authorId",
                "versionNumber"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputId": {
                    "description": "Note:\nThis is a Foreign Key to `outputs.id`.<fk table='outputs' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "authorId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "versionNumber": {
                    "format": "smallint",
                    "type": "integer"
                },
                "comment": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "isMain": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isClientVersion": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isAutogenerated": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "properties": {
                    "format": "jsonb"
                }
            },
            "type": "object"
        },
        "folders": {
            "required": [
                "id",
                "projectId",
                "priorityId",
                "statusId",
                "name",
                "creationOrder",
                "isDeleted"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "priorityId": {
                    "description": "Note:\nThis is a Foreign Key to `priorities.id`.<fk table='priorities' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "typeId": {
                    "description": "Note:\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "parentId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "isHiddenable": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "startDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "endDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "plannedHours": {
                    "format": "numeric",
                    "type": "number"
                },
                "bidPrice": {
                    "format": "numeric",
                    "type": "number"
                },
                "usedHours": {
                    "format": "numeric",
                    "type": "number"
                },
                "codaioPageId": {
                    "format": "text",
                    "type": "string"
                },
                "codaioBrowserLink": {
                    "format": "text",
                    "type": "string"
                },
                "bidHours": {
                    "format": "real",
                    "type": "number"
                },
                "availableToStartConflict": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "invoiceNo": {
                    "format": "text",
                    "type": "string"
                },
                "invoicedHours": {
                    "format": "real",
                    "type": "number"
                },
                "availableToStart": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "deadline": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "importanceNo": {
                    "format": "integer",
                    "type": "integer"
                },
                "downstreamHoursTotal": {
                    "format": "real",
                    "type": "number"
                },
                "latestDeadline": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "latestAvailableToStart": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "mustStartOn": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "soonestAvailableToStart": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "preferredAssignee": {
                    "format": "uuid",
                    "type": "string"
                },
                "value": {
                    "format": "real",
                    "type": "number"
                },
                "softAssigneeId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "upstreamHoursCritical": {
                    "format": "real",
                    "type": "number"
                },
                "deadlineConflict": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "spentHoursDiffecence": {
                    "format": "real",
                    "type": "number"
                },
                "qnote": {
                    "format": "text",
                    "type": "string"
                },
                "lastTask": {
                    "format": "text",
                    "type": "string"
                },
                "sprint": {
                    "format": "text",
                    "type": "string"
                },
                "properties": {
                    "format": "jsonb"
                },
                "downstreamHoursCritical": {
                    "format": "real",
                    "type": "number"
                },
                "downstreamHoursDirect": {
                    "format": "real",
                    "type": "number"
                },
                "lastClientNoteDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "lastNoteDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "fixPrice": {
                    "format": "numeric",
                    "type": "number"
                },
                "sourceFolderTemplateId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "sourceFolderTemplateItemId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "billPrice": {
                    "format": "numeric",
                    "type": "number"
                },
                "laborCost": {
                    "format": "numeric",
                    "type": "number"
                },
                "creationOrder": {
                    "format": "integer",
                    "type": "integer"
                },
                "deletedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "isDeleted": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "outgoingStatusMappingIncomingStatuses": {
            "required": [
                "outgoingStatusMappingId",
                "statusId"
            ],
            "properties": {
                "outgoingStatusMappingId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outgoingStatusMappings.id`.<fk table='outgoingStatusMappings' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "documentations": {
            "required": [
                "id",
                "entityId",
                "url",
                "entityName"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "entityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "url": {
                    "format": "text",
                    "type": "string"
                },
                "entityName": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "jobInstances": {
            "required": [
                "id",
                "authorId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "authorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "finishedAt": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "contextId": {
                    "format": "uuid",
                    "type": "string"
                },
                "contextType": {
                    "format": "text",
                    "type": "string"
                },
                "status": {
                    "format": "text",
                    "type": "string"
                },
                "result": {
                    "format": "text",
                    "type": "string"
                },
                "messageData": {
                    "format": "jsonb"
                },
                "traceback": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "notificationTypes": {
            "required": [
                "id",
                "name",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "typeOutputTypes": {
            "required": [
                "outputTypeId",
                "typeId"
            ],
            "properties": {
                "outputTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outputTypes.id`.<fk table='outputTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "typeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "payouts": {
            "required": [
                "id",
                "name",
                "amount",
                "paymentStatusId",
                "startDate",
                "endDate",
                "userId",
                "authorId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "amount": {
                    "format": "numeric",
                    "type": "number"
                },
                "paymentStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `paymentStatuses.id`.<fk table='paymentStatuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "note": {
                    "format": "text",
                    "type": "string"
                },
                "startDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "endDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "paymentReference": {
                    "format": "text",
                    "type": "string"
                },
                "paymentDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "authorId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "schedulerViews": {
            "required": [
                "id",
                "isPublic",
                "name",
                "pivotMode"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "ownerId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isPublic": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "tableState": {
                    "format": "jsonb"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "projectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "format": "uuid",
                    "type": "string"
                },
                "filter": {
                    "format": "text",
                    "type": "string"
                },
                "pivotMode": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "viewGroupId": {
                    "description": "Note:\nThis is a Foreign Key to `viewGroups.id`.<fk table='viewGroups' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "chartDatas": {
            "required": [
                "id",
                "stateId",
                "typeId",
                "projectId",
                "hours",
                "count",
                "date"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "stateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "typeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "hours": {
                    "format": "numeric",
                    "type": "number"
                },
                "count": {
                    "format": "integer",
                    "type": "integer"
                },
                "date": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "statusMappingStatuses": {
            "required": [
                "statusMappingId",
                "statusId"
            ],
            "properties": {
                "statusMappingId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statusMappings.id`.<fk table='statusMappings' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outputActionTemplates": {
            "required": [
                "outputTemplateId",
                "actionId",
                "statusIds",
                "order"
            ],
            "properties": {
                "outputTemplateId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outputTemplates.id`.<fk table='outputTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "actionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `actions.id`.<fk table='actions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusIds": {
                    "format": "uuid[]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "order": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "paymentStatuses": {
            "required": [
                "id",
                "name",
                "locksEditing"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "locksEditing": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "statusMappings": {
            "required": [
                "id",
                "folderNewStatusId",
                "outputVersionStatusId",
                "projectDefinitionId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderNewStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputVersionStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outputFileTypes": {
            "required": [
                "outputId",
                "fileTypeId"
            ],
            "properties": {
                "outputId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outputs.id`.<fk table='outputs' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "fileTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `fileTypes.id`.<fk table='fileTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "typeApplicationExcludes": {
            "required": [
                "typeId",
                "applicationId"
            ],
            "properties": {
                "typeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `applications.id`.<fk table='applications' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "folderTypes": {
            "required": [
                "id",
                "name",
                "isTaskable",
                "isTypeable",
                "isTodoable",
                "isCore",
                "isHiddenable"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "isTaskable": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isTypeable": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "isTodoable": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isHiddenable": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "projectDefinitionOutputTypes": {
            "required": [
                "projectDefinitionId",
                "outputTypeId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outputTypes.id`.<fk table='outputTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "serverInfo": {
            "required": [
                "id",
                "version"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "integer",
                    "type": "integer"
                },
                "version": {
                    "format": "text",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudLinks": {
            "required": [
                "id",
                "componentId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "cloudApplicationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "componentId": {
                    "description": "Note:\nThis is a Foreign Key to `components.id`.<fk table='components' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "link": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "originalId": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectStatuses": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "help": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "helpStructure": {
                    "format": "jsonb"
                }
            },
            "type": "object"
        },
        "clients": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "folder_paths": {
            "properties": {
                "folderId": {
                    "format": "uuid",
                    "type": "string"
                },
                "folderPath": {
                    "format": "text",
                    "type": "string"
                },
                "folderPathIds": {
                    "format": "uuid[]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "outputTemplates": {
            "required": [
                "id",
                "outputTypeId",
                "hiddenInOutgoing",
                "isExternal",
                "folderTemplateId",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `outputTypes.id`.<fk table='outputTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "suffix": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "hiddenInOutgoing": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isExternal": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "folderTemplateId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "tagId": {
                    "description": "Note:\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudApplications": {
            "required": [
                "id",
                "name",
                "icon"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "icon": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "fileTypes": {
            "required": [
                "id",
                "name",
                "fileExtension",
                "isCore",
                "isOpenable"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "fileExtension": {
                    "format": "character varying",
                    "maxLength": 10,
                    "type": "string"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isOpenable": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "applicationFileTypes": {
            "required": [
                "applicationId",
                "fileTypeId"
            ],
            "properties": {
                "applicationId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `applications.id`.<fk table='applications' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "fileTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `fileTypes.id`.<fk table='fileTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "settings": {
            "required": [
                "id",
                "key",
                "value",
                "type",
                "isCore",
                "isSecret"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "key": {
                    "format": "text",
                    "type": "string"
                },
                "value": {
                    "format": "text",
                    "type": "string"
                },
                "type": {
                    "format": "integer",
                    "type": "integer"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isSecret": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "folderAssigneeTemplates": {
            "required": [
                "folderTemplateId",
                "userId",
                "assigneeRoleId"
            ],
            "properties": {
                "folderTemplateId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "assigneeRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `assigneeRoles.id`.<fk table='assigneeRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outputs": {
            "required": [
                "id",
                "folderId",
                "outputTypeId",
                "name",
                "hiddenInOutgoing",
                "isExternal",
                "fileTypeLogicalOperator"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `outputTypes.id`.<fk table='outputTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "suffix": {
                    "default": "",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "hiddenInOutgoing": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isExternal": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "tagId": {
                    "description": "Note:\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "fileTypeLogicalOperator": {
                    "default": 1,
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "__EFMigrationsHistory": {
            "required": [
                "migrationId",
                "productVersion"
            ],
            "properties": {
                "migrationId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "character varying",
                    "maxLength": 150,
                    "type": "string"
                },
                "productVersion": {
                    "format": "character varying",
                    "maxLength": 32,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "documentationOverrides": {
            "required": [
                "id",
                "entityId",
                "url",
                "entityName",
                "projectDefinitionId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "entityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "url": {
                    "format": "text",
                    "type": "string"
                },
                "entityName": {
                    "format": "text",
                    "type": "string"
                },
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectViews": {
            "required": [
                "id",
                "isPublic",
                "name",
                "isForManagerView",
                "isForProjectView",
                "isForVersionView",
                "pivotMode"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "ownerId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isPublic": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "tableState": {
                    "format": "jsonb"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "projectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "filter": {
                    "format": "text",
                    "type": "string"
                },
                "googleSheetURL": {
                    "format": "text",
                    "type": "string"
                },
                "viewGroupId": {
                    "description": "Note:\nThis is a Foreign Key to `viewGroups.id`.<fk table='viewGroups' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "isForManagerView": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "isForProjectView": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "isForVersionView": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "pivotMode": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "noteAssignees": {
            "required": [
                "id",
                "noteId",
                "userId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "noteId": {
                    "description": "Note:\nThis is a Foreign Key to `notes.id`.<fk table='notes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "folderTemplates": {
            "required": [
                "id",
                "creationOrder"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "typeId": {
                    "description": "Note:\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "parentId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "folderTemplateName": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "folderTemplateCodeName": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "plannedHours": {
                    "format": "numeric",
                    "type": "number"
                },
                "priorityId": {
                    "description": "Note:\nThis is a Foreign Key to `priorities.id`.<fk table='priorities' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "biddingOverrideId": {
                    "description": "Note:\nThis is a Foreign Key to `biddingOverrides.id`.<fk table='biddingOverrides' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTemplateDescription": {
                    "format": "text",
                    "type": "string"
                },
                "creationOrder": {
                    "default": 0,
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "projectDefinitionActivityTypes": {
            "required": [
                "projectDefinitionId",
                "activityTypeId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "activityTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `activityTypes.id`.<fk table='activityTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "assigneeRoleNotificationTypes": {
            "required": [
                "assigneeRoleId",
                "notificationTypeId",
                "state",
                "defaultEnabled",
                "defaultEmailEnabled"
            ],
            "properties": {
                "assigneeRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `assigneeRoles.id`.<fk table='assigneeRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "notificationTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `notificationTypes.id`.<fk table='notificationTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "state": {
                    "format": "integer",
                    "type": "integer"
                },
                "defaultEnabled": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "defaultEmailEnabled": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "applicationVersions": {
            "required": [
                "id",
                "applicationId",
                "isActive"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Note:\nThis is a Foreign Key to `applications.id`.<fk table='applications' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "version": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "isActive": {
                    "default": true,
                    "format": "boolean",
                    "type": "boolean"
                },
                "arguments": {
                    "format": "jsonb"
                },
                "environment": {
                    "format": "jsonb"
                },
                "executables": {
                    "format": "jsonb"
                },
                "versionLabel": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "biddingOverrides": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "data": {
                    "format": "jsonb"
                }
            },
            "type": "object"
        },
        "projectAssignees": {
            "required": [
                "projectId",
                "userId",
                "assigneeRoleId"
            ],
            "properties": {
                "projectId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "assigneeRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `assigneeRoles.id`.<fk table='assigneeRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "customAttributeDefinitions": {
            "required": [
                "id",
                "customAttributeBaseTypeId",
                "name",
                "isCore",
                "isInheritable",
                "isPinned",
                "isHidden",
                "codeName"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "customAttributeBaseTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `customAttributeBaseTypes.id`.<fk table='customAttributeBaseTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "customAttributeGroupId": {
                    "description": "Note:\nThis is a Foreign Key to `customAttributeGroups.id`.<fk table='customAttributeGroups' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isInheritable": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isPinned": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isHidden": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "defaultValue": {
                    "format": "text",
                    "type": "string"
                },
                "values": {
                    "format": "jsonb"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "codeName": {
                    "default": "",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "views": {
            "required": [
                "id",
                "isPublic",
                "tableState",
                "name",
                "isForProjectView",
                "isForVersionView",
                "isForManagerView",
                "pivotMode"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "ownerId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isPublic": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "tableState": {
                    "format": "jsonb"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "isForProjectView": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isForVersionView": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isForManagerView": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "folderTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "filter": {
                    "format": "text",
                    "type": "string"
                },
                "viewGroupId": {
                    "description": "Note:\nThis is a Foreign Key to `viewGroups.id`.<fk table='viewGroups' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "pivotMode": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "folderAssignees": {
            "required": [
                "folderId",
                "userId",
                "assigneeRoleId"
            ],
            "properties": {
                "folderId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "assigneeRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `assigneeRoles.id`.<fk table='assigneeRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outgoingStatusMappingTags": {
            "required": [
                "outgoingStatusMappingId",
                "tagId"
            ],
            "properties": {
                "outgoingStatusMappingId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outgoingStatusMappings.id`.<fk table='outgoingStatusMappings' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "tagId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "noteCategories": {
            "required": [
                "id",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "projectDefinitionFolderTypes": {
            "required": [
                "projectDefinitionId",
                "folderTypeId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "uploadRecords": {
            "required": [
                "id",
                "status",
                "fileName",
                "path",
                "traceback",
                "authorId",
                "progress",
                "total",
                "retries"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "jobId": {
                    "format": "uuid",
                    "type": "string"
                },
                "status": {
                    "format": "character varying",
                    "maxLength": 20,
                    "type": "string"
                },
                "fileName": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "path": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "traceback": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "authorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "progress": {
                    "format": "double precision",
                    "type": "number"
                },
                "total": {
                    "format": "integer",
                    "type": "integer"
                },
                "retries": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "customAttributeDefinitionPermissions": {
            "required": [
                "customAttributeDefinitionId",
                "securityRoleId",
                "canRead",
                "canWrite"
            ],
            "properties": {
                "customAttributeDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `customAttributeDefinitions.id`.<fk table='customAttributeDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "securityRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `securityRoles.id`.<fk table='securityRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "canRead": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "canWrite": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "actions": {
            "required": [
                "id",
                "name",
                "runLocal",
                "isAutomatic",
                "icon",
                "version"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "runLocal": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isAutomatic": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "data": {
                    "format": "jsonb"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "group": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "default": "",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "label": {
                    "format": "text",
                    "type": "string"
                },
                "version": {
                    "default": "",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "outputTemplateId": {
                    "description": "Note:\nThis is a Foreign Key to `outputTemplates.id`.<fk table='outputTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "states": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "folderFolders": {
            "required": [
                "inputFolderId",
                "outputFolderId"
            ],
            "properties": {
                "inputFolderId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputFolderId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "folderTemplateFolderTemplates": {
            "required": [
                "inputFolderTemplateId",
                "outputFolderTemplateId"
            ],
            "properties": {
                "inputFolderTemplateId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputFolderTemplateId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "permissions": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "scope": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "hourlyRates": {
            "required": [
                "id",
                "userId",
                "projectDefinitionId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "value": {
                    "format": "numeric",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "folderTags": {
            "required": [
                "folderId",
                "tagId"
            ],
            "properties": {
                "folderId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "tagId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "storageRecords": {
            "required": [
                "id",
                "componentId",
                "storageLocation"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "componentId": {
                    "description": "Note:\nThis is a Foreign Key to `components.id`.<fk table='components' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "storageLocation": {
                    "format": "smallint",
                    "type": "integer"
                },
                "link": {
                    "format": "text",
                    "type": "string"
                },
                "status": {
                    "format": "smallint",
                    "type": "integer"
                },
                "statusMessage": {
                    "format": "text",
                    "type": "string"
                },
                "progress": {
                    "format": "smallint",
                    "type": "integer"
                },
                "linkExpiration": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ayonProductTypes": {
            "required": [
                "id",
                "name",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "frameIOLabels": {
            "required": [
                "id",
                "name",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "statusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "todoTemplates": {
            "required": [
                "id",
                "isDone",
                "text",
                "color",
                "folderTemplateId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "isDone": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "text": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "color": {
                    "format": "character",
                    "maxLength": 7,
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "doneDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "folderTemplateId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTemplates.id`.<fk table='folderTemplates' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projects": {
            "required": [
                "id",
                "projectDefinitionId",
                "projectStatusId",
                "name",
                "isDeleted"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `projectStatuses.id`.<fk table='projectStatuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "clientId": {
                    "description": "Note:\nThis is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "startDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "endDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "deletedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "isDeleted": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "cloudPlaces": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "cloudApplicationId": {
                    "description": "Note:\nThis is a Foreign Key to `cloudApplications.id`.<fk table='cloudApplications' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "componentStateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "componentId": {
                    "description": "Note:\nThis is a Foreign Key to `components.id`.<fk table='components' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "userAvailabilities": {
            "required": [
                "id",
                "userId",
                "weekDayId",
                "workTimeStart",
                "workTimeEnd"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "weekDayId": {
                    "description": "Note:\nThis is a Foreign Key to `weekDays.id`.<fk table='weekDays' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "workTimeStart": {
                    "format": "interval",
                    "type": "string"
                },
                "workTimeEnd": {
                    "format": "interval",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "holidays": {
            "required": [
                "id",
                "holidayStartDate",
                "holidayEndDate",
                "holidayType"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "holidayStartDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "holidayEndDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "holidayType": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "customAttributeDefinitionFolderTypes": {
            "required": [
                "id",
                "customAttributeDefinitionId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "customAttributeDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `customAttributeDefinitions.id`.<fk table='customAttributeDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "defaultViews": {
            "required": [
                "projectId",
                "userId",
                "viewId"
            ],
            "properties": {
                "projectId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "viewId": {
                    "description": "Note:\nThis is a Foreign Key to `views.id`.<fk table='views' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "biddings": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "data": {
                    "format": "jsonb"
                }
            },
            "type": "object"
        },
        "statusMappingTags": {
            "required": [
                "statusMappingId",
                "tagId"
            ],
            "properties": {
                "statusMappingId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statusMappings.id`.<fk table='statusMappings' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "tagId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "userTimeTrackers": {
            "required": [
                "id",
                "folderId",
                "startTime",
                "isLive",
                "userId",
                "userHourlyRate"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "startTime": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "endTime": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "isLive": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "iterationId": {
                    "description": "Note:\nThis is a Foreign Key to `iterations.id`.<fk table='iterations' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userHourlyRate": {
                    "default": 0.0,
                    "format": "numeric",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "projectDefinitionNoteCategories": {
            "required": [
                "projectDefinitionId",
                "noteCategoryId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "noteCategoryId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `noteCategories.id`.<fk table='noteCategories' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitions": {
            "required": [
                "id",
                "name",
                "isActive",
                "hasBasicFolderStructure",
                "isDefault"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "isActive": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "hasBasicFolderStructure": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "directoryStructureSettings": {
                    "format": "jsonb"
                },
                "templates": {
                    "format": "jsonb"
                },
                "defaultActivityTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `activityTypes.id`.<fk table='activityTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultFolderStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultFolderTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultNoteCategoryId": {
                    "description": "Note:\nThis is a Foreign Key to `noteCategories.id`.<fk table='noteCategories' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultOutputStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultOutputTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `outputTypes.id`.<fk table='outputTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultPriorityId": {
                    "description": "Note:\nThis is a Foreign Key to `priorities.id`.<fk table='priorities' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "defaultTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "roots": {
                    "format": "jsonb"
                },
                "isDefault": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "outputNameSettings": {
                    "format": "jsonb"
                },
                "templateNameProfiles": {
                    "format": "jsonb"
                },
                "taskLinkPatterns": {
                    "format": "json"
                },
                "defaultTypePrice": {
                    "format": "real",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "outputVersionTags": {
            "required": [
                "outputVersionId",
                "tagId"
            ],
            "properties": {
                "outputVersionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outputVersions.id`.<fk table='outputVersions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "tagId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "userSkills": {
            "required": [
                "id",
                "userId",
                "typeId",
                "skillLevel"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "typeId": {
                    "description": "Note:\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "skillLevel": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "customAttributes": {
            "required": [
                "id",
                "customAttributeDefinitionId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "customAttributeDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `customAttributeDefinitions.id`.<fk table='customAttributeDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "value": {
                    "format": "text",
                    "type": "string"
                },
                "inheritedValue": {
                    "format": "text",
                    "type": "string"
                },
                "computedValue": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "publicHolidays": {
            "required": [
                "id",
                "name",
                "date"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "date": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "userTags": {
            "required": [
                "id",
                "icon",
                "userId",
                "folderId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "icon": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "note": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "color": {
                    "format": "character",
                    "maxLength": 7,
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outputActions": {
            "required": [
                "outputId",
                "actionId",
                "statusIds",
                "order"
            ],
            "properties": {
                "outputId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outputs.id`.<fk table='outputs' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "actionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `actions.id`.<fk table='actions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusIds": {
                    "format": "uuid[]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "order": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "noteAttachments": {
            "required": [
                "noteId",
                "attachmentId"
            ],
            "properties": {
                "noteId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `notes.id`.<fk table='notes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "attachmentId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `attachments.id`.<fk table='attachments' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "payoutAttachments": {
            "required": [
                "payoutId",
                "attachmentId"
            ],
            "properties": {
                "payoutId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `payouts.id`.<fk table='payouts' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "attachmentId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `attachments.id`.<fk table='attachments' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outgoingStatusMappingCurrentStatuses": {
            "required": [
                "outgoingStatusMappingId",
                "statusId"
            ],
            "properties": {
                "outgoingStatusMappingId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `outgoingStatusMappings.id`.<fk table='outgoingStatusMappings' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "customAttributeGroups": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "description": {
                    "format": "jsonb"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "projectScenarios": {
            "required": [
                "id",
                "name",
                "structure"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "structure": {
                    "format": "jsonb"
                }
            },
            "type": "object"
        },
        "notes": {
            "required": [
                "id",
                "folderId",
                "noteCategoryId",
                "authorId",
                "content"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "noteCategoryId": {
                    "description": "Note:\nThis is a Foreign Key to `noteCategories.id`.<fk table='noteCategories' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputVersionId": {
                    "description": "Note:\nThis is a Foreign Key to `outputVersions.id`.<fk table='outputVersions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "parentId": {
                    "description": "Note:\nThis is a Foreign Key to `notes.id`.<fk table='notes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "authorId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "content": {
                    "format": "text",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "isAutogenerated": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isPinned": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "frame": {
                    "format": "integer",
                    "type": "integer"
                },
                "reviewData": {
                    "format": "json"
                },
                "componentId": {
                    "description": "Note:\nThis is a Foreign Key to `components.id`.<fk table='components' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "playlistComponents": {
            "required": [
                "playlistId",
                "componentId",
                "order"
            ],
            "properties": {
                "playlistId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `playlists.id`.<fk table='playlists' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "componentId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `components.id`.<fk table='components' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "order": {
                    "format": "integer",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "todos": {
            "required": [
                "id",
                "folderId",
                "isDone",
                "text",
                "color"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "isDone": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "text": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "color": {
                    "format": "character",
                    "maxLength": 7,
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "doneDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "weekDays": {
            "required": [
                "id",
                "name",
                "abbreviation"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "abbreviation": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "activityTypes": {
            "required": [
                "id",
                "name",
                "displayText"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "displayText": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "events": {
            "required": [
                "id",
                "authorId",
                "status",
                "topic"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "authorId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "payload": {
                    "format": "jsonb"
                },
                "status": {
                    "default": "finished",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "topic": {
                    "format": "text",
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "sender": {
                    "format": "text",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "integrationApplicationUsers": {
            "required": [
                "integrationApplicationId",
                "userId",
                "value"
            ],
            "properties": {
                "integrationApplicationId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `integrationApplications.id`.<fk table='integrationApplications' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "value": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "componentStates": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "state": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "priorities": {
            "required": [
                "id",
                "name",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "value": {
                    "format": "smallint",
                    "type": "integer"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "playlists": {
            "required": [
                "id",
                "name",
                "authorId",
                "projectId",
                "isActive",
                "isPrivate",
                "isClient"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 256,
                    "type": "string"
                },
                "description": {
                    "format": "text",
                    "type": "string"
                },
                "authorId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "link": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "externalLink": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "properties": {
                    "format": "jsonb"
                },
                "isActive": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isPrivate": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isClient": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "securityRoles": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "statuses": {
            "required": [
                "id",
                "stateId",
                "name",
                "canBeUsedForFolder",
                "canBeUsedForOutput",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "stateId": {
                    "description": "Note:\nThis is a Foreign Key to `states.id`.<fk table='states' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "canBeUsedForFolder": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "canBeUsedForOutput": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "frameIOLabelId": {
                    "description": "Note:\nThis is a Foreign Key to `frameIOLabels.id`.<fk table='frameIOLabels' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "ftrackStatusId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "tags": {
            "required": [
                "id",
                "isCore",
                "isHidden",
                "canBeUsedForFolder",
                "canBeUsedForOutput",
                "canBeUsedForOutputVersion",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "format": "character varying",
                    "maxLength": 4096,
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "isCore": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "isHidden": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "canBeUsedForFolder": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "canBeUsedForOutput": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "canBeUsedForOutputVersion": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "customAttributeBaseTypes": {
            "required": [
                "id",
                "attributeType",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "attributeType": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "assigneeRoles": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "active_locks": {
            "properties": {
                "schemaname": {
                    "format": "name",
                    "type": "string"
                },
                "relname": {
                    "format": "name",
                    "type": "string"
                },
                "locktype": {
                    "format": "text",
                    "type": "string"
                },
                "page": {
                    "format": "integer",
                    "type": "integer"
                },
                "virtualtransaction": {
                    "format": "text",
                    "type": "string"
                },
                "pid": {
                    "format": "integer",
                    "type": "integer"
                },
                "mode": {
                    "format": "text",
                    "type": "string"
                },
                "granted": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "schedulerViewFolderTypes": {
            "required": [
                "schedulerViewId",
                "folderTypeId"
            ],
            "properties": {
                "schedulerViewId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `schedulerViews.id`.<fk table='schedulerViews' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `folderTypes.id`.<fk table='folderTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "attachments": {
            "required": [
                "id",
                "fileName",
                "contextType",
                "authorId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "fileName": {
                    "format": "character varying",
                    "maxLength": 1024,
                    "type": "string"
                },
                "contextType": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "contextId": {
                    "format": "uuid",
                    "type": "string"
                },
                "authorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "mimeType": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "users": {
            "required": [
                "id",
                "email",
                "fullName",
                "userName",
                "rawAppMetaData",
                "rawUserMetaData",
                "createdAt",
                "updatedAt",
                "emailVerified",
                "userVerified",
                "securityRoleId",
                "phone"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "email": {
                    "format": "text",
                    "type": "string"
                },
                "fullName": {
                    "format": "text",
                    "type": "string"
                },
                "userName": {
                    "format": "text",
                    "type": "string"
                },
                "emailConfirmedAt": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "rawAppMetaData": {
                    "format": "jsonb"
                },
                "rawUserMetaData": {
                    "format": "jsonb"
                },
                "createdAt": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedAt": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "emailVerified": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "userVerified": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "securityRoleId": {
                    "description": "Note:\nThis is a Foreign Key to `securityRoles.id`.<fk table='securityRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "contractEnd": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "contractStart": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "hourlyRate": {
                    "format": "numeric",
                    "type": "number"
                },
                "lunchEnd": {
                    "format": "interval",
                    "type": "string"
                },
                "lunchStart": {
                    "format": "interval",
                    "type": "string"
                },
                "workEndTime": {
                    "format": "interval",
                    "type": "string"
                },
                "workStartTime": {
                    "format": "interval",
                    "type": "string"
                },
                "phone": {
                    "default": "",
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitionOutputStatuses": {
            "required": [
                "projectDefinitionId",
                "statusId",
                "isClientReviewable"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "isClientReviewable": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "userWeekDays": {
            "required": [
                "userId",
                "weekDayId"
            ],
            "properties": {
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "weekDayId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `weekDays.id`.<fk table='weekDays' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitionTags": {
            "required": [
                "projectDefinitionId",
                "tagId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "tagId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "activities": {
            "required": [
                "id",
                "folderId",
                "activityTypeId",
                "authorId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "activityTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `activityTypes.id`.<fk table='activityTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "authorId": {
                    "default": "00000000-0000-0000-0000-000000000000",
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "action": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "changes": {
                    "format": "jsonb"
                },
                "contextType": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "data": {
                    "format": "jsonb"
                },
                "contextId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "applications": {
            "required": [
                "id",
                "name",
                "isActive",
                "isSoftware",
                "isCore",
                "family"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "isActive": {
                    "default": true,
                    "format": "boolean",
                    "type": "boolean"
                },
                "isSoftware": {
                    "default": true,
                    "format": "boolean",
                    "type": "boolean"
                },
                "arguments": {
                    "format": "jsonb"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "environment": {
                    "format": "jsonb"
                },
                "family": {
                    "default": "",
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "executables": {
                    "format": "jsonb"
                },
                "label": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "typeUser": {
            "required": [
                "skilledUserId",
                "skillsId"
            ],
            "properties": {
                "skilledUserId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "skillsId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `types.id`.<fk table='types' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitionPriorities": {
            "required": [
                "projectDefinitionId",
                "priorityId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "priorityId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `priorities.id`.<fk table='priorities' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitionCustomAttributeDefinitions": {
            "required": [
                "customAttributeDefinitionId",
                "projectDefinitionId"
            ],
            "properties": {
                "customAttributeDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `customAttributeDefinitions.id`.<fk table='customAttributeDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "advancePayments": {
            "required": [
                "id",
                "type",
                "amount",
                "note",
                "userId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "format": "text",
                    "type": "string"
                },
                "amount": {
                    "format": "numeric",
                    "type": "number"
                },
                "note": {
                    "format": "text",
                    "type": "string"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "payoutId": {
                    "description": "Note:\nThis is a Foreign Key to `payouts.id`.<fk table='payouts' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "notifications": {
            "required": [
                "id",
                "seen",
                "notificationTypeId"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "format": "uuid",
                    "type": "string"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "seen": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "changes": {
                    "format": "jsonb"
                },
                "authorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "contextId": {
                    "format": "uuid",
                    "type": "string"
                },
                "contextType": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "objectType": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "action": {
                    "format": "character varying",
                    "maxLength": 128,
                    "type": "string"
                },
                "notificationTypeId": {
                    "default": "00000000-0000-0000-0000-000000000000",
                    "description": "Note:\nThis is a Foreign Key to `notificationTypes.id`.<fk table='notificationTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "data": {
                    "format": "jsonb"
                }
            },
            "type": "object"
        },
        "outputTypes": {
            "required": [
                "id",
                "name",
                "isCore"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "format": "text",
                    "type": "string"
                },
                "shortName": {
                    "format": "text",
                    "type": "string"
                },
                "codeName": {
                    "format": "text",
                    "type": "string"
                },
                "icon": {
                    "format": "text",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "screenPriority": {
                    "format": "integer",
                    "type": "integer"
                },
                "isCore": {
                    "default": false,
                    "format": "boolean",
                    "type": "boolean"
                },
                "ayonProductTypeId": {
                    "description": "Note:\nThis is a Foreign Key to `ayonProductTypes.id`.<fk table='ayonProductTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outgoingStatusMappings": {
            "required": [
                "id",
                "outgoingFolderNewStatusId",
                "outputVersionStatusId",
                "projectDefinitionId",
                "useOtherIncomingFolderStatuses"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outgoingFolderNewStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "outputVersionStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "useOtherIncomingFolderStatuses": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "securityRolePermissions": {
            "required": [
                "securityRoleId",
                "permissionId"
            ],
            "properties": {
                "securityRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `securityRoles.id`.<fk table='securityRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "permissionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `permissions.id`.<fk table='permissions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "projectDefinitionFolderStatuses": {
            "required": [
                "projectDefinitionId",
                "statusId"
            ],
            "properties": {
                "projectDefinitionId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `projectDefinitions.id`.<fk table='projectDefinitions' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "statusId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `statuses.id`.<fk table='statuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "workerFees": {
            "required": [
                "id",
                "type",
                "amount",
                "paymentStatusId",
                "note",
                "userId",
                "color",
                "isLocked"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "format": "text",
                    "type": "string"
                },
                "amount": {
                    "format": "numeric",
                    "type": "number"
                },
                "paymentStatusId": {
                    "description": "Note:\nThis is a Foreign Key to `paymentStatuses.id`.<fk table='paymentStatuses' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "note": {
                    "format": "text",
                    "type": "string"
                },
                "folderId": {
                    "description": "Note:\nThis is a Foreign Key to `folders.id`.<fk table='folders' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "payoutId": {
                    "description": "Note:\nThis is a Foreign Key to `payouts.id`.<fk table='payouts' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "color": {
                    "format": "text",
                    "type": "string"
                },
                "isLocked": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "userTimeTrackerId": {
                    "description": "Note:\nThis is a Foreign Key to `userTimeTrackers.id`.<fk table='userTimeTrackers' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "hourlyRate": {
                    "format": "numeric",
                    "type": "number"
                },
                "spentHours": {
                    "format": "numeric",
                    "type": "number"
                },
                "workingDuration": {
                    "format": "integer",
                    "type": "integer"
                },
                "frameFee": {
                    "format": "numeric",
                    "type": "number"
                },
                "createdDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "updatedDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "vacations": {
            "required": [
                "id",
                "vacationStartDate",
                "vacationEndDate",
                "userId",
                "status"
            ],
            "properties": {
                "id": {
                    "description": "Note:\nThis is a Primary Key.<pk/>",
                    "format": "uuid",
                    "type": "string"
                },
                "vacationStartDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "vacationEndDate": {
                    "format": "timestamp with time zone",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "status": {
                    "default": "",
                    "format": "text",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "userAssigneeRoleNotificationTypeOverrides": {
            "required": [
                "assigneeRoleId",
                "notificationTypeId",
                "userId",
                "enabled",
                "emailEnabled"
            ],
            "properties": {
                "assigneeRoleId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `assigneeRoles.id`.<fk table='assigneeRoles' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "notificationTypeId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `notificationTypes.id`.<fk table='notificationTypes' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "userId": {
                    "description": "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
                    "format": "uuid",
                    "type": "string"
                },
                "enabled": {
                    "format": "boolean",
                    "type": "boolean"
                },
                "emailEnabled": {
                    "format": "boolean",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "parameters": {
        "preferParams": {
            "name": "Prefer",
            "description": "Preference",
            "required": false,
            "enum": [
                "params=single-object"
            ],
            "in": "header",
            "type": "string"
        },
        "preferReturn": {
            "name": "Prefer",
            "description": "Preference",
            "required": false,
            "enum": [
                "return=representation",
                "return=minimal",
                "return=none"
            ],
            "in": "header",
            "type": "string"
        },
        "preferCount": {
            "name": "Prefer",
            "description": "Preference",
            "required": false,
            "enum": [
                "count=none"
            ],
            "in": "header",
            "type": "string"
        },
        "preferPost": {
            "name": "Prefer",
            "description": "Preference",
            "required": false,
            "enum": [
                "return=representation",
                "return=minimal",
                "return=none",
                "resolution=ignore-duplicates",
                "resolution=merge-duplicates"
            ],
            "in": "header",
            "type": "string"
        },
        "select": {
            "name": "select",
            "description": "Filtering Columns",
            "required": false,
            "in": "query",
            "type": "string"
        },
        "on_conflict": {
            "name": "on_conflict",
            "description": "On Conflict",
            "required": false,
            "in": "query",
            "type": "string"
        },
        "order": {
            "name": "order",
            "description": "Ordering",
            "required": false,
            "in": "query",
            "type": "string"
        },
        "range": {
            "name": "Range",
            "description": "Limiting and Pagination",
            "required": false,
            "in": "header",
            "type": "string"
        },
        "rangeUnit": {
            "name": "Range-Unit",
            "description": "Limiting and Pagination",
            "required": false,
            "default": "items",
            "in": "header",
            "type": "string"
        },
        "offset": {
            "name": "offset",
            "description": "Limiting and Pagination",
            "required": false,
            "in": "query",
            "type": "string"
        },
        "limit": {
            "name": "limit",
            "description": "Limiting and Pagination",
            "required": false,
            "in": "query",
            "type": "string"
        },
        "body.types": {
            "name": "types",
            "description": "types",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/types"
            }
        },
        "rowFilter.types.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.price": {
            "name": "price",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.types.biddingId": {
            "name": "biddingId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionTypes": {
            "name": "projectDefinitionTypes",
            "description": "projectDefinitionTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionTypes"
            }
        },
        "rowFilter.projectDefinitionTypes.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionTypes.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionTypes.price": {
            "name": "price",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "body.apiKeys": {
            "name": "apiKeys",
            "description": "apiKeys",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/apiKeys"
            }
        },
        "rowFilter.apiKeys.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.apiKeys.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.apiKeys.token": {
            "name": "token",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.apiKeys.createdAt": {
            "name": "createdAt",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.viewGroups": {
            "name": "viewGroups",
            "description": "viewGroups",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/viewGroups"
            }
        },
        "rowFilter.viewGroups.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.viewGroups.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.viewGroups.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.iterations": {
            "name": "iterations",
            "description": "iterations",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/iterations"
            }
        },
        "rowFilter.iterations.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.number": {
            "name": "number",
            "required": false,
            "format": "smallint",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.isDone": {
            "name": "isDone",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.availableToStart": {
            "name": "availableToStart",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.deadline": {
            "name": "deadline",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.plannedHours": {
            "name": "plannedHours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.startDate": {
            "name": "startDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.endDate": {
            "name": "endDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.softAssigneeId": {
            "name": "softAssigneeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.assigneeId": {
            "name": "assigneeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.usedHours": {
            "name": "usedHours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.iterations.isIndependent": {
            "name": "isIndependent",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.userSharedComponents": {
            "name": "userSharedComponents",
            "description": "userSharedComponents",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userSharedComponents"
            }
        },
        "rowFilter.userSharedComponents.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userSharedComponents.componentId": {
            "name": "componentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.integrationApplications": {
            "name": "integrationApplications",
            "description": "integrationApplications",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/integrationApplications"
            }
        },
        "rowFilter.integrationApplications.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.integrationApplications.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.components": {
            "name": "components",
            "description": "components",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/components"
            }
        },
        "rowFilter.components.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.outputVersionId": {
            "name": "outputVersionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.fileTypeId": {
            "name": "fileTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.componentStateId": {
            "name": "componentStateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.relativePath": {
            "name": "relativePath",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.isAutogenerated": {
            "name": "isAutogenerated",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.publisherOs": {
            "name": "publisherOs",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.data": {
            "name": "data",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.isReviewable": {
            "name": "isReviewable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.isWebComponent": {
            "name": "isWebComponent",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.components.webLink": {
            "name": "webLink",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.outputVersions": {
            "name": "outputVersions",
            "description": "outputVersions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputVersions"
            }
        },
        "rowFilter.outputVersions.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.outputId": {
            "name": "outputId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.versionNumber": {
            "name": "versionNumber",
            "required": false,
            "format": "smallint",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.comment": {
            "name": "comment",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.isMain": {
            "name": "isMain",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.isClientVersion": {
            "name": "isClientVersion",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.isAutogenerated": {
            "name": "isAutogenerated",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersions.properties": {
            "name": "properties",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "body.folders": {
            "name": "folders",
            "description": "folders",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folders"
            }
        },
        "rowFilter.folders.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.priorityId": {
            "name": "priorityId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.parentId": {
            "name": "parentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.isHiddenable": {
            "name": "isHiddenable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.startDate": {
            "name": "startDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.endDate": {
            "name": "endDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.plannedHours": {
            "name": "plannedHours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.bidPrice": {
            "name": "bidPrice",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.usedHours": {
            "name": "usedHours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.codaioPageId": {
            "name": "codaioPageId",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.codaioBrowserLink": {
            "name": "codaioBrowserLink",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.bidHours": {
            "name": "bidHours",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.availableToStartConflict": {
            "name": "availableToStartConflict",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.invoiceNo": {
            "name": "invoiceNo",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.invoicedHours": {
            "name": "invoicedHours",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.availableToStart": {
            "name": "availableToStart",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.deadline": {
            "name": "deadline",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.importanceNo": {
            "name": "importanceNo",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.downstreamHoursTotal": {
            "name": "downstreamHoursTotal",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.latestDeadline": {
            "name": "latestDeadline",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.latestAvailableToStart": {
            "name": "latestAvailableToStart",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.mustStartOn": {
            "name": "mustStartOn",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.soonestAvailableToStart": {
            "name": "soonestAvailableToStart",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.preferredAssignee": {
            "name": "preferredAssignee",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.value": {
            "name": "value",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.softAssigneeId": {
            "name": "softAssigneeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.upstreamHoursCritical": {
            "name": "upstreamHoursCritical",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.deadlineConflict": {
            "name": "deadlineConflict",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.spentHoursDiffecence": {
            "name": "spentHoursDiffecence",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.qnote": {
            "name": "qnote",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.lastTask": {
            "name": "lastTask",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.sprint": {
            "name": "sprint",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.properties": {
            "name": "properties",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.downstreamHoursCritical": {
            "name": "downstreamHoursCritical",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.downstreamHoursDirect": {
            "name": "downstreamHoursDirect",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.lastClientNoteDate": {
            "name": "lastClientNoteDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.lastNoteDate": {
            "name": "lastNoteDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.fixPrice": {
            "name": "fixPrice",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.sourceFolderTemplateId": {
            "name": "sourceFolderTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.sourceFolderTemplateItemId": {
            "name": "sourceFolderTemplateItemId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.billPrice": {
            "name": "billPrice",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.laborCost": {
            "name": "laborCost",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.creationOrder": {
            "name": "creationOrder",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.deletedDate": {
            "name": "deletedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folders.isDeleted": {
            "name": "isDeleted",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.outgoingStatusMappingIncomingStatuses": {
            "name": "outgoingStatusMappingIncomingStatuses",
            "description": "outgoingStatusMappingIncomingStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outgoingStatusMappingIncomingStatuses"
            }
        },
        "rowFilter.outgoingStatusMappingIncomingStatuses.outgoingStatusMappingId": {
            "name": "outgoingStatusMappingId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappingIncomingStatuses.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.documentations": {
            "name": "documentations",
            "description": "documentations",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/documentations"
            }
        },
        "rowFilter.documentations.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentations.entityId": {
            "name": "entityId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentations.url": {
            "name": "url",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentations.entityName": {
            "name": "entityName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.jobInstances": {
            "name": "jobInstances",
            "description": "jobInstances",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/jobInstances"
            }
        },
        "rowFilter.jobInstances.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.finishedAt": {
            "name": "finishedAt",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.contextId": {
            "name": "contextId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.contextType": {
            "name": "contextType",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.status": {
            "name": "status",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.result": {
            "name": "result",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.messageData": {
            "name": "messageData",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.jobInstances.traceback": {
            "name": "traceback",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.notificationTypes": {
            "name": "notificationTypes",
            "description": "notificationTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/notificationTypes"
            }
        },
        "rowFilter.notificationTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notificationTypes.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.typeOutputTypes": {
            "name": "typeOutputTypes",
            "description": "typeOutputTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/typeOutputTypes"
            }
        },
        "rowFilter.typeOutputTypes.outputTypeId": {
            "name": "outputTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.typeOutputTypes.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.payouts": {
            "name": "payouts",
            "description": "payouts",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/payouts"
            }
        },
        "rowFilter.payouts.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.amount": {
            "name": "amount",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.paymentStatusId": {
            "name": "paymentStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.note": {
            "name": "note",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.startDate": {
            "name": "startDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.endDate": {
            "name": "endDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.paymentReference": {
            "name": "paymentReference",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.paymentDate": {
            "name": "paymentDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payouts.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.schedulerViews": {
            "name": "schedulerViews",
            "description": "schedulerViews",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/schedulerViews"
            }
        },
        "rowFilter.schedulerViews.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.ownerId": {
            "name": "ownerId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.isPublic": {
            "name": "isPublic",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.tableState": {
            "name": "tableState",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.filter": {
            "name": "filter",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.pivotMode": {
            "name": "pivotMode",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViews.viewGroupId": {
            "name": "viewGroupId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.chartDatas": {
            "name": "chartDatas",
            "description": "chartDatas",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/chartDatas"
            }
        },
        "rowFilter.chartDatas.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.chartDatas.stateId": {
            "name": "stateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.chartDatas.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.chartDatas.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.chartDatas.hours": {
            "name": "hours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.chartDatas.count": {
            "name": "count",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.chartDatas.date": {
            "name": "date",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.statusMappingStatuses": {
            "name": "statusMappingStatuses",
            "description": "statusMappingStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/statusMappingStatuses"
            }
        },
        "rowFilter.statusMappingStatuses.statusMappingId": {
            "name": "statusMappingId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statusMappingStatuses.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outputActionTemplates": {
            "name": "outputActionTemplates",
            "description": "outputActionTemplates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputActionTemplates"
            }
        },
        "rowFilter.outputActionTemplates.outputTemplateId": {
            "name": "outputTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputActionTemplates.actionId": {
            "name": "actionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputActionTemplates.statusIds": {
            "name": "statusIds",
            "required": false,
            "format": "uuid[]",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputActionTemplates.order": {
            "name": "order",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.paymentStatuses": {
            "name": "paymentStatuses",
            "description": "paymentStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/paymentStatuses"
            }
        },
        "rowFilter.paymentStatuses.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.paymentStatuses.locksEditing": {
            "name": "locksEditing",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.statusMappings": {
            "name": "statusMappings",
            "description": "statusMappings",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/statusMappings"
            }
        },
        "rowFilter.statusMappings.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statusMappings.folderNewStatusId": {
            "name": "folderNewStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statusMappings.outputVersionStatusId": {
            "name": "outputVersionStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statusMappings.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outputFileTypes": {
            "name": "outputFileTypes",
            "description": "outputFileTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputFileTypes"
            }
        },
        "rowFilter.outputFileTypes.outputId": {
            "name": "outputId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputFileTypes.fileTypeId": {
            "name": "fileTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.typeApplicationExcludes": {
            "name": "typeApplicationExcludes",
            "description": "typeApplicationExcludes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/typeApplicationExcludes"
            }
        },
        "rowFilter.typeApplicationExcludes.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.typeApplicationExcludes.applicationId": {
            "name": "applicationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.folderTypes": {
            "name": "folderTypes",
            "description": "folderTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderTypes"
            }
        },
        "rowFilter.folderTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.isTaskable": {
            "name": "isTaskable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.isTypeable": {
            "name": "isTypeable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.isTodoable": {
            "name": "isTodoable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.isHiddenable": {
            "name": "isHiddenable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTypes.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionOutputTypes": {
            "name": "projectDefinitionOutputTypes",
            "description": "projectDefinitionOutputTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionOutputTypes"
            }
        },
        "rowFilter.projectDefinitionOutputTypes.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionOutputTypes.outputTypeId": {
            "name": "outputTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.serverInfo": {
            "name": "serverInfo",
            "description": "serverInfo",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/serverInfo"
            }
        },
        "rowFilter.serverInfo.id": {
            "name": "id",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.serverInfo.version": {
            "name": "version",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.serverInfo.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.serverInfo.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.cloudLinks": {
            "name": "cloudLinks",
            "description": "cloudLinks",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/cloudLinks"
            }
        },
        "rowFilter.cloudLinks.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudLinks.cloudApplicationId": {
            "name": "cloudApplicationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudLinks.componentId": {
            "name": "componentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudLinks.link": {
            "name": "link",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudLinks.originalId": {
            "name": "originalId",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.projectStatuses": {
            "name": "projectStatuses",
            "description": "projectStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectStatuses"
            }
        },
        "rowFilter.projectStatuses.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectStatuses.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectStatuses.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectStatuses.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectStatuses.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectStatuses.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.help": {
            "name": "help",
            "description": "help",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/help"
            }
        },
        "rowFilter.help.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.help.helpStructure": {
            "name": "helpStructure",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "body.clients": {
            "name": "clients",
            "description": "clients",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/clients"
            }
        },
        "rowFilter.clients.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.clients.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.clients.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.folder_paths": {
            "name": "folder_paths",
            "description": "folder_paths",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folder_paths"
            }
        },
        "rowFilter.folder_paths.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folder_paths.folderPath": {
            "name": "folderPath",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folder_paths.folderPathIds": {
            "name": "folderPathIds",
            "required": false,
            "format": "uuid[]",
            "in": "query",
            "type": "string"
        },
        "body.outputTemplates": {
            "name": "outputTemplates",
            "description": "outputTemplates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputTemplates"
            }
        },
        "rowFilter.outputTemplates.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.outputTypeId": {
            "name": "outputTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.suffix": {
            "name": "suffix",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.hiddenInOutgoing": {
            "name": "hiddenInOutgoing",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.isExternal": {
            "name": "isExternal",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.folderTemplateId": {
            "name": "folderTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTemplates.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.cloudApplications": {
            "name": "cloudApplications",
            "description": "cloudApplications",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/cloudApplications"
            }
        },
        "rowFilter.cloudApplications.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudApplications.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudApplications.icon": {
            "name": "icon",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.fileTypes": {
            "name": "fileTypes",
            "description": "fileTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/fileTypes"
            }
        },
        "rowFilter.fileTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.fileTypes.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.fileTypes.fileExtension": {
            "name": "fileExtension",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.fileTypes.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.fileTypes.isOpenable": {
            "name": "isOpenable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.applicationFileTypes": {
            "name": "applicationFileTypes",
            "description": "applicationFileTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/applicationFileTypes"
            }
        },
        "rowFilter.applicationFileTypes.applicationId": {
            "name": "applicationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationFileTypes.fileTypeId": {
            "name": "fileTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationFileTypes.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.settings": {
            "name": "settings",
            "description": "settings",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/settings"
            }
        },
        "rowFilter.settings.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.settings.key": {
            "name": "key",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.settings.value": {
            "name": "value",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.settings.type": {
            "name": "type",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.settings.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.settings.isSecret": {
            "name": "isSecret",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.folderAssigneeTemplates": {
            "name": "folderAssigneeTemplates",
            "description": "folderAssigneeTemplates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderAssigneeTemplates"
            }
        },
        "rowFilter.folderAssigneeTemplates.folderTemplateId": {
            "name": "folderTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderAssigneeTemplates.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderAssigneeTemplates.assigneeRoleId": {
            "name": "assigneeRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outputs": {
            "name": "outputs",
            "description": "outputs",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputs"
            }
        },
        "rowFilter.outputs.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.outputTypeId": {
            "name": "outputTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.suffix": {
            "name": "suffix",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.hiddenInOutgoing": {
            "name": "hiddenInOutgoing",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.isExternal": {
            "name": "isExternal",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputs.fileTypeLogicalOperator": {
            "name": "fileTypeLogicalOperator",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.__EFMigrationsHistory": {
            "name": "__EFMigrationsHistory",
            "description": "__EFMigrationsHistory",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/__EFMigrationsHistory"
            }
        },
        "rowFilter.__EFMigrationsHistory.migrationId": {
            "name": "migrationId",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.__EFMigrationsHistory.productVersion": {
            "name": "productVersion",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.documentationOverrides": {
            "name": "documentationOverrides",
            "description": "documentationOverrides",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/documentationOverrides"
            }
        },
        "rowFilter.documentationOverrides.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentationOverrides.entityId": {
            "name": "entityId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentationOverrides.url": {
            "name": "url",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentationOverrides.entityName": {
            "name": "entityName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.documentationOverrides.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectViews": {
            "name": "projectViews",
            "description": "projectViews",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectViews"
            }
        },
        "rowFilter.projectViews.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.ownerId": {
            "name": "ownerId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.isPublic": {
            "name": "isPublic",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.tableState": {
            "name": "tableState",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.filter": {
            "name": "filter",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.googleSheetURL": {
            "name": "googleSheetURL",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.viewGroupId": {
            "name": "viewGroupId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.isForManagerView": {
            "name": "isForManagerView",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.isForProjectView": {
            "name": "isForProjectView",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.isForVersionView": {
            "name": "isForVersionView",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectViews.pivotMode": {
            "name": "pivotMode",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.noteAssignees": {
            "name": "noteAssignees",
            "description": "noteAssignees",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/noteAssignees"
            }
        },
        "rowFilter.noteAssignees.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteAssignees.noteId": {
            "name": "noteId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteAssignees.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.folderTemplates": {
            "name": "folderTemplates",
            "description": "folderTemplates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderTemplates"
            }
        },
        "rowFilter.folderTemplates.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.parentId": {
            "name": "parentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.folderTemplateName": {
            "name": "folderTemplateName",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.folderTemplateCodeName": {
            "name": "folderTemplateCodeName",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.plannedHours": {
            "name": "plannedHours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.priorityId": {
            "name": "priorityId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.biddingOverrideId": {
            "name": "biddingOverrideId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.folderTemplateDescription": {
            "name": "folderTemplateDescription",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplates.creationOrder": {
            "name": "creationOrder",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionActivityTypes": {
            "name": "projectDefinitionActivityTypes",
            "description": "projectDefinitionActivityTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionActivityTypes"
            }
        },
        "rowFilter.projectDefinitionActivityTypes.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionActivityTypes.activityTypeId": {
            "name": "activityTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.assigneeRoleNotificationTypes": {
            "name": "assigneeRoleNotificationTypes",
            "description": "assigneeRoleNotificationTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/assigneeRoleNotificationTypes"
            }
        },
        "rowFilter.assigneeRoleNotificationTypes.assigneeRoleId": {
            "name": "assigneeRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.assigneeRoleNotificationTypes.notificationTypeId": {
            "name": "notificationTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.assigneeRoleNotificationTypes.state": {
            "name": "state",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.assigneeRoleNotificationTypes.defaultEnabled": {
            "name": "defaultEnabled",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.assigneeRoleNotificationTypes.defaultEmailEnabled": {
            "name": "defaultEmailEnabled",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.applicationVersions": {
            "name": "applicationVersions",
            "description": "applicationVersions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/applicationVersions"
            }
        },
        "rowFilter.applicationVersions.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.applicationId": {
            "name": "applicationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.version": {
            "name": "version",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.isActive": {
            "name": "isActive",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.arguments": {
            "name": "arguments",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.environment": {
            "name": "environment",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.executables": {
            "name": "executables",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applicationVersions.versionLabel": {
            "name": "versionLabel",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.biddingOverrides": {
            "name": "biddingOverrides",
            "description": "biddingOverrides",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/biddingOverrides"
            }
        },
        "rowFilter.biddingOverrides.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.biddingOverrides.data": {
            "name": "data",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "body.projectAssignees": {
            "name": "projectAssignees",
            "description": "projectAssignees",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectAssignees"
            }
        },
        "rowFilter.projectAssignees.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectAssignees.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectAssignees.assigneeRoleId": {
            "name": "assigneeRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.customAttributeDefinitions": {
            "name": "customAttributeDefinitions",
            "description": "customAttributeDefinitions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/customAttributeDefinitions"
            }
        },
        "rowFilter.customAttributeDefinitions.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.customAttributeBaseTypeId": {
            "name": "customAttributeBaseTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.customAttributeGroupId": {
            "name": "customAttributeGroupId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.isInheritable": {
            "name": "isInheritable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.isPinned": {
            "name": "isPinned",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.isHidden": {
            "name": "isHidden",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.defaultValue": {
            "name": "defaultValue",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.values": {
            "name": "values",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitions.codeName": {
            "name": "codeName",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.views": {
            "name": "views",
            "description": "views",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/views"
            }
        },
        "rowFilter.views.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.ownerId": {
            "name": "ownerId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.isPublic": {
            "name": "isPublic",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.tableState": {
            "name": "tableState",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.isForProjectView": {
            "name": "isForProjectView",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.isForVersionView": {
            "name": "isForVersionView",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.isForManagerView": {
            "name": "isForManagerView",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.filter": {
            "name": "filter",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.viewGroupId": {
            "name": "viewGroupId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.views.pivotMode": {
            "name": "pivotMode",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.folderAssignees": {
            "name": "folderAssignees",
            "description": "folderAssignees",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderAssignees"
            }
        },
        "rowFilter.folderAssignees.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderAssignees.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderAssignees.assigneeRoleId": {
            "name": "assigneeRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outgoingStatusMappingTags": {
            "name": "outgoingStatusMappingTags",
            "description": "outgoingStatusMappingTags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outgoingStatusMappingTags"
            }
        },
        "rowFilter.outgoingStatusMappingTags.outgoingStatusMappingId": {
            "name": "outgoingStatusMappingId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappingTags.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.noteCategories": {
            "name": "noteCategories",
            "description": "noteCategories",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/noteCategories"
            }
        },
        "rowFilter.noteCategories.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteCategories.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteCategories.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteCategories.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteCategories.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionFolderTypes": {
            "name": "projectDefinitionFolderTypes",
            "description": "projectDefinitionFolderTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionFolderTypes"
            }
        },
        "rowFilter.projectDefinitionFolderTypes.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionFolderTypes.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.uploadRecords": {
            "name": "uploadRecords",
            "description": "uploadRecords",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/uploadRecords"
            }
        },
        "rowFilter.uploadRecords.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.jobId": {
            "name": "jobId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.status": {
            "name": "status",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.fileName": {
            "name": "fileName",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.path": {
            "name": "path",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.traceback": {
            "name": "traceback",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.progress": {
            "name": "progress",
            "required": false,
            "format": "double precision",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.total": {
            "name": "total",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.uploadRecords.retries": {
            "name": "retries",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.customAttributeDefinitionPermissions": {
            "name": "customAttributeDefinitionPermissions",
            "description": "customAttributeDefinitionPermissions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/customAttributeDefinitionPermissions"
            }
        },
        "rowFilter.customAttributeDefinitionPermissions.customAttributeDefinitionId": {
            "name": "customAttributeDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitionPermissions.securityRoleId": {
            "name": "securityRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitionPermissions.canRead": {
            "name": "canRead",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitionPermissions.canWrite": {
            "name": "canWrite",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.actions": {
            "name": "actions",
            "description": "actions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/actions"
            }
        },
        "rowFilter.actions.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.runLocal": {
            "name": "runLocal",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.isAutomatic": {
            "name": "isAutomatic",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.data": {
            "name": "data",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.group": {
            "name": "group",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.icon": {
            "name": "icon",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.label": {
            "name": "label",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.version": {
            "name": "version",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.actions.outputTemplateId": {
            "name": "outputTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.states": {
            "name": "states",
            "description": "states",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/states"
            }
        },
        "rowFilter.states.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.states.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.states.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.states.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.states.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.states.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.states.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.folderFolders": {
            "name": "folderFolders",
            "description": "folderFolders",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderFolders"
            }
        },
        "rowFilter.folderFolders.inputFolderId": {
            "name": "inputFolderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderFolders.outputFolderId": {
            "name": "outputFolderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.folderTemplateFolderTemplates": {
            "name": "folderTemplateFolderTemplates",
            "description": "folderTemplateFolderTemplates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderTemplateFolderTemplates"
            }
        },
        "rowFilter.folderTemplateFolderTemplates.inputFolderTemplateId": {
            "name": "inputFolderTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTemplateFolderTemplates.outputFolderTemplateId": {
            "name": "outputFolderTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.permissions": {
            "name": "permissions",
            "description": "permissions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/permissions"
            }
        },
        "rowFilter.permissions.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.permissions.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.permissions.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.permissions.scope": {
            "name": "scope",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.hourlyRates": {
            "name": "hourlyRates",
            "description": "hourlyRates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/hourlyRates"
            }
        },
        "rowFilter.hourlyRates.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.hourlyRates.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.hourlyRates.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.hourlyRates.value": {
            "name": "value",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "body.folderTags": {
            "name": "folderTags",
            "description": "folderTags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/folderTags"
            }
        },
        "rowFilter.folderTags.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.folderTags.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.storageRecords": {
            "name": "storageRecords",
            "description": "storageRecords",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/storageRecords"
            }
        },
        "rowFilter.storageRecords.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.componentId": {
            "name": "componentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.storageLocation": {
            "name": "storageLocation",
            "required": false,
            "format": "smallint",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.link": {
            "name": "link",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.status": {
            "name": "status",
            "required": false,
            "format": "smallint",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.statusMessage": {
            "name": "statusMessage",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.progress": {
            "name": "progress",
            "required": false,
            "format": "smallint",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.linkExpiration": {
            "name": "linkExpiration",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.storageRecords.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.ayonProductTypes": {
            "name": "ayonProductTypes",
            "description": "ayonProductTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/ayonProductTypes"
            }
        },
        "rowFilter.ayonProductTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.ayonProductTypes.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.ayonProductTypes.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.ayonProductTypes.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.frameIOLabels": {
            "name": "frameIOLabels",
            "description": "frameIOLabels",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/frameIOLabels"
            }
        },
        "rowFilter.frameIOLabels.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.frameIOLabels.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.todoTemplates": {
            "name": "todoTemplates",
            "description": "todoTemplates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/todoTemplates"
            }
        },
        "rowFilter.todoTemplates.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.isDone": {
            "name": "isDone",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.text": {
            "name": "text",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.color": {
            "name": "color",
            "required": false,
            "format": "character",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.doneDate": {
            "name": "doneDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todoTemplates.folderTemplateId": {
            "name": "folderTemplateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projects": {
            "name": "projects",
            "description": "projects",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projects"
            }
        },
        "rowFilter.projects.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.projectStatusId": {
            "name": "projectStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.clientId": {
            "name": "clientId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.startDate": {
            "name": "startDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.endDate": {
            "name": "endDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.deletedDate": {
            "name": "deletedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projects.isDeleted": {
            "name": "isDeleted",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.cloudPlaces": {
            "name": "cloudPlaces",
            "description": "cloudPlaces",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/cloudPlaces"
            }
        },
        "rowFilter.cloudPlaces.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudPlaces.cloudApplicationId": {
            "name": "cloudApplicationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudPlaces.componentStateId": {
            "name": "componentStateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.cloudPlaces.componentId": {
            "name": "componentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.userAvailabilities": {
            "name": "userAvailabilities",
            "description": "userAvailabilities",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userAvailabilities"
            }
        },
        "rowFilter.userAvailabilities.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAvailabilities.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAvailabilities.weekDayId": {
            "name": "weekDayId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAvailabilities.workTimeStart": {
            "name": "workTimeStart",
            "required": false,
            "format": "interval",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAvailabilities.workTimeEnd": {
            "name": "workTimeEnd",
            "required": false,
            "format": "interval",
            "in": "query",
            "type": "string"
        },
        "body.holidays": {
            "name": "holidays",
            "description": "holidays",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/holidays"
            }
        },
        "rowFilter.holidays.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.holidays.holidayStartDate": {
            "name": "holidayStartDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.holidays.holidayEndDate": {
            "name": "holidayEndDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.holidays.holidayType": {
            "name": "holidayType",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.customAttributeDefinitionFolderTypes": {
            "name": "customAttributeDefinitionFolderTypes",
            "description": "customAttributeDefinitionFolderTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/customAttributeDefinitionFolderTypes"
            }
        },
        "rowFilter.customAttributeDefinitionFolderTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitionFolderTypes.customAttributeDefinitionId": {
            "name": "customAttributeDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeDefinitionFolderTypes.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.defaultViews": {
            "name": "defaultViews",
            "description": "defaultViews",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/defaultViews"
            }
        },
        "rowFilter.defaultViews.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.defaultViews.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.defaultViews.viewId": {
            "name": "viewId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.biddings": {
            "name": "biddings",
            "description": "biddings",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/biddings"
            }
        },
        "rowFilter.biddings.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.biddings.data": {
            "name": "data",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "body.statusMappingTags": {
            "name": "statusMappingTags",
            "description": "statusMappingTags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/statusMappingTags"
            }
        },
        "rowFilter.statusMappingTags.statusMappingId": {
            "name": "statusMappingId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statusMappingTags.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.userTimeTrackers": {
            "name": "userTimeTrackers",
            "description": "userTimeTrackers",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userTimeTrackers"
            }
        },
        "rowFilter.userTimeTrackers.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.startTime": {
            "name": "startTime",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.endTime": {
            "name": "endTime",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.isLive": {
            "name": "isLive",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.iterationId": {
            "name": "iterationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTimeTrackers.userHourlyRate": {
            "name": "userHourlyRate",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionNoteCategories": {
            "name": "projectDefinitionNoteCategories",
            "description": "projectDefinitionNoteCategories",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionNoteCategories"
            }
        },
        "rowFilter.projectDefinitionNoteCategories.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionNoteCategories.noteCategoryId": {
            "name": "noteCategoryId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitions": {
            "name": "projectDefinitions",
            "description": "projectDefinitions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitions"
            }
        },
        "rowFilter.projectDefinitions.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.isActive": {
            "name": "isActive",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.hasBasicFolderStructure": {
            "name": "hasBasicFolderStructure",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.directoryStructureSettings": {
            "name": "directoryStructureSettings",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.templates": {
            "name": "templates",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultActivityTypeId": {
            "name": "defaultActivityTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultFolderStatusId": {
            "name": "defaultFolderStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultFolderTypeId": {
            "name": "defaultFolderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultNoteCategoryId": {
            "name": "defaultNoteCategoryId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultOutputStatusId": {
            "name": "defaultOutputStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultOutputTypeId": {
            "name": "defaultOutputTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultPriorityId": {
            "name": "defaultPriorityId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultTypeId": {
            "name": "defaultTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.roots": {
            "name": "roots",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.isDefault": {
            "name": "isDefault",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.outputNameSettings": {
            "name": "outputNameSettings",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.templateNameProfiles": {
            "name": "templateNameProfiles",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.taskLinkPatterns": {
            "name": "taskLinkPatterns",
            "required": false,
            "format": "json",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitions.defaultTypePrice": {
            "name": "defaultTypePrice",
            "required": false,
            "format": "real",
            "in": "query",
            "type": "string"
        },
        "body.outputVersionTags": {
            "name": "outputVersionTags",
            "description": "outputVersionTags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputVersionTags"
            }
        },
        "rowFilter.outputVersionTags.outputVersionId": {
            "name": "outputVersionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputVersionTags.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.userSkills": {
            "name": "userSkills",
            "description": "userSkills",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userSkills"
            }
        },
        "rowFilter.userSkills.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userSkills.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userSkills.typeId": {
            "name": "typeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userSkills.skillLevel": {
            "name": "skillLevel",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.customAttributes": {
            "name": "customAttributes",
            "description": "customAttributes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/customAttributes"
            }
        },
        "rowFilter.customAttributes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributes.customAttributeDefinitionId": {
            "name": "customAttributeDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributes.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributes.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributes.value": {
            "name": "value",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributes.inheritedValue": {
            "name": "inheritedValue",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributes.computedValue": {
            "name": "computedValue",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.publicHolidays": {
            "name": "publicHolidays",
            "description": "publicHolidays",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/publicHolidays"
            }
        },
        "rowFilter.publicHolidays.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.publicHolidays.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.publicHolidays.date": {
            "name": "date",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.userTags": {
            "name": "userTags",
            "description": "userTags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userTags"
            }
        },
        "rowFilter.userTags.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTags.icon": {
            "name": "icon",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTags.note": {
            "name": "note",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTags.color": {
            "name": "color",
            "required": false,
            "format": "character",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTags.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userTags.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outputActions": {
            "name": "outputActions",
            "description": "outputActions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputActions"
            }
        },
        "rowFilter.outputActions.outputId": {
            "name": "outputId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputActions.actionId": {
            "name": "actionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputActions.statusIds": {
            "name": "statusIds",
            "required": false,
            "format": "uuid[]",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputActions.order": {
            "name": "order",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.noteAttachments": {
            "name": "noteAttachments",
            "description": "noteAttachments",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/noteAttachments"
            }
        },
        "rowFilter.noteAttachments.noteId": {
            "name": "noteId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.noteAttachments.attachmentId": {
            "name": "attachmentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.payoutAttachments": {
            "name": "payoutAttachments",
            "description": "payoutAttachments",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/payoutAttachments"
            }
        },
        "rowFilter.payoutAttachments.payoutId": {
            "name": "payoutId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.payoutAttachments.attachmentId": {
            "name": "attachmentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outgoingStatusMappingCurrentStatuses": {
            "name": "outgoingStatusMappingCurrentStatuses",
            "description": "outgoingStatusMappingCurrentStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outgoingStatusMappingCurrentStatuses"
            }
        },
        "rowFilter.outgoingStatusMappingCurrentStatuses.outgoingStatusMappingId": {
            "name": "outgoingStatusMappingId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappingCurrentStatuses.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.customAttributeGroups": {
            "name": "customAttributeGroups",
            "description": "customAttributeGroups",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/customAttributeGroups"
            }
        },
        "rowFilter.customAttributeGroups.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeGroups.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeGroups.description": {
            "name": "description",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeGroups.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.projectScenarios": {
            "name": "projectScenarios",
            "description": "projectScenarios",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectScenarios"
            }
        },
        "rowFilter.projectScenarios.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectScenarios.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectScenarios.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectScenarios.structure": {
            "name": "structure",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "body.notes": {
            "name": "notes",
            "description": "notes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/notes"
            }
        },
        "rowFilter.notes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.noteCategoryId": {
            "name": "noteCategoryId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.outputVersionId": {
            "name": "outputVersionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.parentId": {
            "name": "parentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.content": {
            "name": "content",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.isAutogenerated": {
            "name": "isAutogenerated",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.isPinned": {
            "name": "isPinned",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.frame": {
            "name": "frame",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.reviewData": {
            "name": "reviewData",
            "required": false,
            "format": "json",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notes.componentId": {
            "name": "componentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.playlistComponents": {
            "name": "playlistComponents",
            "description": "playlistComponents",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/playlistComponents"
            }
        },
        "rowFilter.playlistComponents.playlistId": {
            "name": "playlistId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlistComponents.componentId": {
            "name": "componentId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlistComponents.order": {
            "name": "order",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "body.todos": {
            "name": "todos",
            "description": "todos",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/todos"
            }
        },
        "rowFilter.todos.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.isDone": {
            "name": "isDone",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.text": {
            "name": "text",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.color": {
            "name": "color",
            "required": false,
            "format": "character",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.todos.doneDate": {
            "name": "doneDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.weekDays": {
            "name": "weekDays",
            "description": "weekDays",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/weekDays"
            }
        },
        "rowFilter.weekDays.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.weekDays.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.weekDays.abbreviation": {
            "name": "abbreviation",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.activityTypes": {
            "name": "activityTypes",
            "description": "activityTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/activityTypes"
            }
        },
        "rowFilter.activityTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activityTypes.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activityTypes.displayText": {
            "name": "displayText",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.events": {
            "name": "events",
            "description": "events",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/events"
            }
        },
        "rowFilter.events.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.payload": {
            "name": "payload",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.status": {
            "name": "status",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.topic": {
            "name": "topic",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.sender": {
            "name": "sender",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.events.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.integrationApplicationUsers": {
            "name": "integrationApplicationUsers",
            "description": "integrationApplicationUsers",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/integrationApplicationUsers"
            }
        },
        "rowFilter.integrationApplicationUsers.integrationApplicationId": {
            "name": "integrationApplicationId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.integrationApplicationUsers.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.integrationApplicationUsers.value": {
            "name": "value",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.componentStates": {
            "name": "componentStates",
            "description": "componentStates",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/componentStates"
            }
        },
        "rowFilter.componentStates.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.componentStates.state": {
            "name": "state",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.priorities": {
            "name": "priorities",
            "description": "priorities",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/priorities"
            }
        },
        "rowFilter.priorities.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.value": {
            "name": "value",
            "required": false,
            "format": "smallint",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.priorities.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.playlists": {
            "name": "playlists",
            "description": "playlists",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/playlists"
            }
        },
        "rowFilter.playlists.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.description": {
            "name": "description",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.link": {
            "name": "link",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.externalLink": {
            "name": "externalLink",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.properties": {
            "name": "properties",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.isActive": {
            "name": "isActive",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.isPrivate": {
            "name": "isPrivate",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.playlists.isClient": {
            "name": "isClient",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.securityRoles": {
            "name": "securityRoles",
            "description": "securityRoles",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/securityRoles"
            }
        },
        "rowFilter.securityRoles.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.securityRoles.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.securityRoles.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.statuses": {
            "name": "statuses",
            "description": "statuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/statuses"
            }
        },
        "rowFilter.statuses.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.stateId": {
            "name": "stateId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.canBeUsedForFolder": {
            "name": "canBeUsedForFolder",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.canBeUsedForOutput": {
            "name": "canBeUsedForOutput",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.frameIOLabelId": {
            "name": "frameIOLabelId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.statuses.ftrackStatusId": {
            "name": "ftrackStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.tags": {
            "name": "tags",
            "description": "tags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/tags"
            }
        },
        "rowFilter.tags.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.description": {
            "name": "description",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.isHidden": {
            "name": "isHidden",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.canBeUsedForFolder": {
            "name": "canBeUsedForFolder",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.canBeUsedForOutput": {
            "name": "canBeUsedForOutput",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.canBeUsedForOutputVersion": {
            "name": "canBeUsedForOutputVersion",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.tags.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.customAttributeBaseTypes": {
            "name": "customAttributeBaseTypes",
            "description": "customAttributeBaseTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/customAttributeBaseTypes"
            }
        },
        "rowFilter.customAttributeBaseTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeBaseTypes.attributeType": {
            "name": "attributeType",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.customAttributeBaseTypes.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.assigneeRoles": {
            "name": "assigneeRoles",
            "description": "assigneeRoles",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/assigneeRoles"
            }
        },
        "rowFilter.assigneeRoles.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.assigneeRoles.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.active_locks": {
            "name": "active_locks",
            "description": "active_locks",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/active_locks"
            }
        },
        "rowFilter.active_locks.schemaname": {
            "name": "schemaname",
            "required": false,
            "format": "name",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.relname": {
            "name": "relname",
            "required": false,
            "format": "name",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.locktype": {
            "name": "locktype",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.page": {
            "name": "page",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.virtualtransaction": {
            "name": "virtualtransaction",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.pid": {
            "name": "pid",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.mode": {
            "name": "mode",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.active_locks.granted": {
            "name": "granted",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.schedulerViewFolderTypes": {
            "name": "schedulerViewFolderTypes",
            "description": "schedulerViewFolderTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/schedulerViewFolderTypes"
            }
        },
        "rowFilter.schedulerViewFolderTypes.schedulerViewId": {
            "name": "schedulerViewId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.schedulerViewFolderTypes.folderTypeId": {
            "name": "folderTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.attachments": {
            "name": "attachments",
            "description": "attachments",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/attachments"
            }
        },
        "rowFilter.attachments.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.fileName": {
            "name": "fileName",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.contextType": {
            "name": "contextType",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.contextId": {
            "name": "contextId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.attachments.mimeType": {
            "name": "mimeType",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.users": {
            "name": "users",
            "description": "users",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/users"
            }
        },
        "rowFilter.users.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.email": {
            "name": "email",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.fullName": {
            "name": "fullName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.userName": {
            "name": "userName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.emailConfirmedAt": {
            "name": "emailConfirmedAt",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.rawAppMetaData": {
            "name": "rawAppMetaData",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.rawUserMetaData": {
            "name": "rawUserMetaData",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.createdAt": {
            "name": "createdAt",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.updatedAt": {
            "name": "updatedAt",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.emailVerified": {
            "name": "emailVerified",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.userVerified": {
            "name": "userVerified",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.securityRoleId": {
            "name": "securityRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.contractEnd": {
            "name": "contractEnd",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.contractStart": {
            "name": "contractStart",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.hourlyRate": {
            "name": "hourlyRate",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.lunchEnd": {
            "name": "lunchEnd",
            "required": false,
            "format": "interval",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.lunchStart": {
            "name": "lunchStart",
            "required": false,
            "format": "interval",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.workEndTime": {
            "name": "workEndTime",
            "required": false,
            "format": "interval",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.workStartTime": {
            "name": "workStartTime",
            "required": false,
            "format": "interval",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.phone": {
            "name": "phone",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.users.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionOutputStatuses": {
            "name": "projectDefinitionOutputStatuses",
            "description": "projectDefinitionOutputStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionOutputStatuses"
            }
        },
        "rowFilter.projectDefinitionOutputStatuses.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionOutputStatuses.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionOutputStatuses.isClientReviewable": {
            "name": "isClientReviewable",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.userWeekDays": {
            "name": "userWeekDays",
            "description": "userWeekDays",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userWeekDays"
            }
        },
        "rowFilter.userWeekDays.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userWeekDays.weekDayId": {
            "name": "weekDayId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionTags": {
            "name": "projectDefinitionTags",
            "description": "projectDefinitionTags",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionTags"
            }
        },
        "rowFilter.projectDefinitionTags.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionTags.tagId": {
            "name": "tagId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.activities": {
            "name": "activities",
            "description": "activities",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/activities"
            }
        },
        "rowFilter.activities.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.activityTypeId": {
            "name": "activityTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.action": {
            "name": "action",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.changes": {
            "name": "changes",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.contextType": {
            "name": "contextType",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.data": {
            "name": "data",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.activities.contextId": {
            "name": "contextId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.applications": {
            "name": "applications",
            "description": "applications",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/applications"
            }
        },
        "rowFilter.applications.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.name": {
            "name": "name",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.isActive": {
            "name": "isActive",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.isSoftware": {
            "name": "isSoftware",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.arguments": {
            "name": "arguments",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.environment": {
            "name": "environment",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.family": {
            "name": "family",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.executables": {
            "name": "executables",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.applications.label": {
            "name": "label",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "body.typeUser": {
            "name": "typeUser",
            "description": "typeUser",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/typeUser"
            }
        },
        "rowFilter.typeUser.skilledUserId": {
            "name": "skilledUserId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.typeUser.skillsId": {
            "name": "skillsId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionPriorities": {
            "name": "projectDefinitionPriorities",
            "description": "projectDefinitionPriorities",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionPriorities"
            }
        },
        "rowFilter.projectDefinitionPriorities.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionPriorities.priorityId": {
            "name": "priorityId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionCustomAttributeDefinitions": {
            "name": "projectDefinitionCustomAttributeDefinitions",
            "description": "projectDefinitionCustomAttributeDefinitions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionCustomAttributeDefinitions"
            }
        },
        "rowFilter.projectDefinitionCustomAttributeDefinitions.customAttributeDefinitionId": {
            "name": "customAttributeDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionCustomAttributeDefinitions.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.advancePayments": {
            "name": "advancePayments",
            "description": "advancePayments",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/advancePayments"
            }
        },
        "rowFilter.advancePayments.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.type": {
            "name": "type",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.amount": {
            "name": "amount",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.note": {
            "name": "note",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.payoutId": {
            "name": "payoutId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.advancePayments.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.notifications": {
            "name": "notifications",
            "description": "notifications",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/notifications"
            }
        },
        "rowFilter.notifications.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.seen": {
            "name": "seen",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.changes": {
            "name": "changes",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.authorId": {
            "name": "authorId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.contextId": {
            "name": "contextId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.contextType": {
            "name": "contextType",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.objectId": {
            "name": "objectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.objectType": {
            "name": "objectType",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.action": {
            "name": "action",
            "required": false,
            "format": "character varying",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.notificationTypeId": {
            "name": "notificationTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.notifications.data": {
            "name": "data",
            "required": false,
            "format": "jsonb",
            "in": "query",
            "type": "string"
        },
        "body.outputTypes": {
            "name": "outputTypes",
            "description": "outputTypes",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outputTypes"
            }
        },
        "rowFilter.outputTypes.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.name": {
            "name": "name",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.shortName": {
            "name": "shortName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.codeName": {
            "name": "codeName",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.icon": {
            "name": "icon",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.screenPriority": {
            "name": "screenPriority",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.isCore": {
            "name": "isCore",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outputTypes.ayonProductTypeId": {
            "name": "ayonProductTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.outgoingStatusMappings": {
            "name": "outgoingStatusMappings",
            "description": "outgoingStatusMappings",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/outgoingStatusMappings"
            }
        },
        "rowFilter.outgoingStatusMappings.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappings.outgoingFolderNewStatusId": {
            "name": "outgoingFolderNewStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappings.outputVersionStatusId": {
            "name": "outputVersionStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappings.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.outgoingStatusMappings.useOtherIncomingFolderStatuses": {
            "name": "useOtherIncomingFolderStatuses",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "body.securityRolePermissions": {
            "name": "securityRolePermissions",
            "description": "securityRolePermissions",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/securityRolePermissions"
            }
        },
        "rowFilter.securityRolePermissions.securityRoleId": {
            "name": "securityRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.securityRolePermissions.permissionId": {
            "name": "permissionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.projectDefinitionFolderStatuses": {
            "name": "projectDefinitionFolderStatuses",
            "description": "projectDefinitionFolderStatuses",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/projectDefinitionFolderStatuses"
            }
        },
        "rowFilter.projectDefinitionFolderStatuses.projectDefinitionId": {
            "name": "projectDefinitionId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.projectDefinitionFolderStatuses.statusId": {
            "name": "statusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "body.workerFees": {
            "name": "workerFees",
            "description": "workerFees",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/workerFees"
            }
        },
        "rowFilter.workerFees.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.type": {
            "name": "type",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.amount": {
            "name": "amount",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.paymentStatusId": {
            "name": "paymentStatusId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.note": {
            "name": "note",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.folderId": {
            "name": "folderId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.projectId": {
            "name": "projectId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.payoutId": {
            "name": "payoutId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.color": {
            "name": "color",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.isLocked": {
            "name": "isLocked",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.userTimeTrackerId": {
            "name": "userTimeTrackerId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.hourlyRate": {
            "name": "hourlyRate",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.spentHours": {
            "name": "spentHours",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.workingDuration": {
            "name": "workingDuration",
            "required": false,
            "format": "integer",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.frameFee": {
            "name": "frameFee",
            "required": false,
            "format": "numeric",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.createdDate": {
            "name": "createdDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.workerFees.updatedDate": {
            "name": "updatedDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "body.vacations": {
            "name": "vacations",
            "description": "vacations",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/vacations"
            }
        },
        "rowFilter.vacations.id": {
            "name": "id",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.vacations.vacationStartDate": {
            "name": "vacationStartDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.vacations.vacationEndDate": {
            "name": "vacationEndDate",
            "required": false,
            "format": "timestamp with time zone",
            "in": "query",
            "type": "string"
        },
        "rowFilter.vacations.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.vacations.status": {
            "name": "status",
            "required": false,
            "format": "text",
            "in": "query",
            "type": "string"
        },
        "body.userAssigneeRoleNotificationTypeOverrides": {
            "name": "userAssigneeRoleNotificationTypeOverrides",
            "description": "userAssigneeRoleNotificationTypeOverrides",
            "required": false,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/userAssigneeRoleNotificationTypeOverrides"
            }
        },
        "rowFilter.userAssigneeRoleNotificationTypeOverrides.assigneeRoleId": {
            "name": "assigneeRoleId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAssigneeRoleNotificationTypeOverrides.notificationTypeId": {
            "name": "notificationTypeId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAssigneeRoleNotificationTypeOverrides.userId": {
            "name": "userId",
            "required": false,
            "format": "uuid",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAssigneeRoleNotificationTypeOverrides.enabled": {
            "name": "enabled",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        },
        "rowFilter.userAssigneeRoleNotificationTypeOverrides.emailEnabled": {
            "name": "emailEnabled",
            "required": false,
            "format": "boolean",
            "in": "query",
            "type": "string"
        }
    },
    "externalDocs": {
        "description": "PostgREST Documentation",
        "url": "https://postgrest.org/en/v12.2/api.html"
    }
}